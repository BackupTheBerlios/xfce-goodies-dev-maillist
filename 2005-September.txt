From kieroglu at math.washington.edu  Thu Sep  8 07:50:46 2005
From: kieroglu at math.washington.edu (Kemal Eroglu)
Date: Wed, 7 Sep 2005 22:50:46 -0700 (PDT)
Subject: Xfce timer plugin
Message-ID: <Pine.LNX.4.61.0509072230520.2948@zeno2.math.washington.edu>


   Hi all,

   Here's my version 0.1 of a timer plugin for XFCE4. It's similar to 
KTeaTime for those of you who are faimilar with KDE. You can define a 
number of alarms. You can either specify a countdown period or a time of 
the day for the alarm. You select the one you want from a popup menu and 
start the coundown. When the countdown ends, a Gtk warning window is 
displayed, or, a command specified by the user is run.

   Clearly, this first version is waiting for testers and suggestions. Some 
of the ideas in my mind are in the TODO file. The only serious issue right 
now is the progressbar: This is the main widget in the plugin display; it 
"fills" as the countdown approaches to its end. I'm trying to get a thin 
progressbar but the panel insists on producing a big, fat one. One other 
issue is that you get some warnings when you remove the plugin right after 
you add it to the panel. It doesn't crash though. It appears to be related 
to the freeing of a gtk_list_store object (pd->list in the code).

   Finally: I'm supposing that this is a plugin which would be added to the 
panel only when needed; but one also would like to keep the settings. The 
XML system provided in the plugin read/write_config functions loses the 
settings when the plugin is removed from the panel. For this reason I'm 
currently writing the settings to the file

  ~/.config/xfce4/panel/timer_settings

   It's a file with the format of a GKeyFile. This may not be a very good 
solution; and I'm waiting for hints on how to properly achieve the 
purpose.

   Test and enjoy!

   Ilgar
-------------- next part --------------
A non-text attachment was scrubbed...
Name: xfce-timer-0.1.tar.bz2
Type: application/x-bzip2
Size: 308247 bytes
Desc: 
URL: <https://lists.berlios.de/pipermail/xfce-goodies-dev/attachments/20050907/44a48be4/attachment.bin>

From szift at szift.org  Mon Sep 12 20:49:36 2005
From: szift at szift.org (=?ISO-8859-2?Q?=A3ukasz_Hejnak?=)
Date: Mon, 12 Sep 2005 20:49:36 +0200
Subject: 'hacking' some of XFCE goodies
Message-ID: <4325CDC0.3060208@szift.org>

Hi
I wanted to show You some of the xfce goodies I managed to tweak a 
little lately.
Thought it may be usefull for someone else, though it isn't probably the 
best way to achieve my demands, as I'm not much of a C coder ;]
Anyway here's what i've done..

xfce4-cpugraph-plugin: 
http://szift.org/xfce/xfce4-cpugraph-plugin-szifted.tar.bz2
The graph window is ok, but except knowing what's the current cpu usage,
I wanted to have a little 'top' over there too, so I added it to the 
tooltip info. Now when You go over the plugin window, You can see the 
usage % and the names of 3 most active processes at the moment.
This one isn't too clean though. I didn't know how to easily gather the 
data, that top usually displays, so I used top to do it.
There's a call like this (in the UpdateTooltip())
exec_cmd (cmd->str, FALSE, FALSE);
where cmd->str is "/usr/local/bin/top_go"
and where top_go is as simple as

cat > /usr/local/bin/top_go << "EOF"
top -b -n 1 >& /tmp/top.lista
EOF
chmod +x /usr/local/bin/top_go

This creates the file /tmp/top.lista which I then parse to get the data 
I'm interested in.


xfce4-fsguard-plugin: 
http://szift.org/xfce/xfce4-fsguard-plugin-szifted.tar.bz2
The changes made here, are making it not only display one filesystem, 
but cycle trough a (hardcoded for now) list of filesystems.
The count is in #define ITERMAX and the list is easy to find
in the plugin_check_fs()  (if (plugin->iter==0) and so on).
It would be nice to make the list available to be modified trought the 
options window, and to make the icon bring more info, some text floating 
over like hda1, hdb5 etc.


Other changes I made, but are still causing me errors and not working 
like they should.
I modified the xfce4-systemload-plugin and xfce4-netload-plugin to read 
info from local files, in the /tmp dir. The files are updated by another 
app, a server-client team, that transmits the required data from my 
server to my workstation. This way I can see the cpu/mem/swap usage and 
net traffic of my server on my desktop.
The error here, is the server-client team. I get some errors in that 
code and can't seem to find the fix lately, even though it worked fine 
before ;]

And finally another change to the xfce4-systemload-plugin to instead of 
displaying the local swap, display the seti client progress.
So I got the bar for 0%->100%, and in the tooltip I get info on 
progress, current WU count and time used so far to do the computing in 
hours, minutes and seconds, as displayed by the client after sending a 
result header.

If anyone would like me to do so, I will make those last three available 
also, but I'm warning that those tend to crash my panel once a while..

--
With regards
?ukasz Hejnak


From szift at szift.org  Wed Sep 14 11:27:01 2005
From: szift at szift.org (=?ISO-8859-2?Q?=A3ukasz_Hejnak?=)
Date: Wed, 14 Sep 2005 11:27:01 +0200
Subject: 'hacking' some of XFCE goodies
In-Reply-To: <4325CDC0.3060208@szift.org>
References: <4325CDC0.3060208@szift.org>
Message-ID: <4327ECE5.6070807@szift.org>

Hi again.
Just a little bug rep. on the cpugraph-plugin-szifted
It isn't working 100% fine and eventually crashes the panel as often as 
the seti-option does (or even more).
I know this is because of the file /tmp/top.lista not being created in 
time for the plugin to read it properly. For now as a temporary fix I 
added a usleep(300); - at line 312 - after the command execution.
But it doesn't stop the crashes, makes them much less often - that's for 
sure.
An ideal option would be to use an exec function that would wait for the 
top process to finish it's scan, but as I said, I'm not much of a coder 
and don't know, and can't find nothing about such a function ;]
(the http://szift.org/xfce/xfce4-cpugraph-plugin-szifted.tar.bz2 has 
been updated by the above)

As a extra tip, as - as ussual - I'm not giving ANY warranty that this 
will work great, I'd recommend making a backup of the ~/.config 
directory before launching the plugins, because when the panel crashes, 
once a while it loses it's settings, and it can be a pain to set 
everything back up again.
But that happened just once or twice troughout all the tests I've made 
(read this as aLOT) so don't worry too much.

--
Best wishes
?ukasz Hejnak


From szift at szift.org  Fri Sep 16 12:08:41 2005
From: szift at szift.org (=?ISO-8859-2?Q?=A3ukasz_Hejnak?=)
Date: Fri, 16 Sep 2005 12:08:41 +0200
Subject: 'hacking' some of XFCE goodies
In-Reply-To: <4327ECE5.6070807@szift.org>
References: <4325CDC0.3060208@szift.org> <4327ECE5.6070807@szift.org>
Message-ID: <432A99A9.6070901@szift.org>

Hi again :]
Ok, just to finish the cpugraph-szifted panel-crashing issue
As I saw 'some' interest in my modification of cpugraph,
I decided to finally learn some more on C and finish the crashing
As reading trough I found out about the system() function ;]
So now I use that instead of the funny 'script' system
And as system() waits for the runned process to finish up, it won't give 
the cpugraph any more reasons to crash also..

The only issue now, is that as it waits for the system() to finish up, 
the whole panel freezes for a nano-second (when top works)..
I think only a alternate system of getting the data would solve this one
but I don't have time to go into this right now, maybe in the future.

So all it depends on now is a /tmp dir writable to the user, and the 
/usr/bin/top program installed.
The updated version is already available at the standard location:
http://szift.org/xfce/xfce4-cpugraph-plugin-szifted.tar.bz2

Have fun :]
Should there anything other wrong happen, please let me know.

-- 
Best wishes
?ukasz Hejnak



From mihalyi at centrum.cz  Sat Sep 17 16:17:08 2005
From: mihalyi at centrum.cz (Ondrej Mihalyi)
Date: Sat, 17 Sep 2005 16:17:08 +0200
Subject: 'hacking' some of XFCE goodies
In-Reply-To: <432A99A9.6070901@szift.org>
References: <4325CDC0.3060208@szift.org>
	<4327ECE5.6070807@szift.org>
	<432A99A9.6070901@szift.org>
Message-ID: <20050917161708.00005edf@ACER_ONDRA>

Didn't try your app, but I think that it would help, if instead of system() you would use combination of fork(), exec() and waitpid().  Idea is to use fork and exec to spawn the 'top' process and then periodically use non-blocking version of waitpid (there are some flags to make it non-blocking) to check whether the 'top' process finished.

I know that you may well not be familiar with those functions, but if you want to succeed in making your app better, I believe that this is kind of easy way how to do it.

Cheers, 

Ondrej

On Fri, 16 Sep 2005 12:08:41 +0200
_ukasz Hejnak <szift at szift.org> wrote:

> Hi again :]
> Ok, just to finish the cpugraph-szifted panel-crashing issue
> As I saw 'some' interest in my modification of cpugraph,
> I decided to finally learn some more on C and finish the crashing
> As reading trough I found out about the system() function ;]
> So now I use that instead of the funny 'script' system
> And as system() waits for the runned process to finish up, it won't give 
> the cpugraph any more reasons to crash also..
> 
> The only issue now, is that as it waits for the system() to finish up, 
> the whole panel freezes for a nano-second (when top works)..
> I think only a alternate system of getting the data would solve this one
> but I don't have time to go into this right now, maybe in the future.
> 
> So all it depends on now is a /tmp dir writable to the user, and the 
> /usr/bin/top program installed.
> The updated version is already available at the standard location:
> http://szift.org/xfce/xfce4-cpugraph-plugin-szifted.tar.bz2
> 
> Have fun :]
> Should there anything other wrong happen, please let me know.
> 
> -- 
> Best wishes
> _ukasz Hejnak
> 
> _______________________________________________
> xfce-goodies-dev mailing list
> xfce-goodies-dev at lists.berlios.de
> http://lists.berlios.de/mailman/listinfo/xfce-goodies-dev


From szift at szift.org  Sat Sep 17 19:11:42 2005
From: szift at szift.org (=?ISO-8859-2?Q?=A3ukasz_Hejnak?=)
Date: Sat, 17 Sep 2005 19:11:42 +0200
Subject: 'hacking' some of XFCE goodies
In-Reply-To: <20050917161708.00005edf@ACER_ONDRA>
References: <4325CDC0.3060208@szift.org>	<4327ECE5.6070807@szift.org>	<432A99A9.6070901@szift.org> <20050917161708.00005edf@ACER_ONDRA>
Message-ID: <432C4E4E.3010803@szift.org>

Hi..

Ondrej Mihalyi wrote:
> Didn't try your app, but I think that it would help, if instead of system() you would use combination of fork(), exec() and waitpid().  Idea is to use fork and exec to spawn the 'top' process and then periodically use non-blocking version of waitpid (there are some flags to make it non-blocking) to check whether the 'top' process finished.
> I know that you may well not be familiar with those functions, but if you want to succeed in making your app better, I believe that this is kind of easy way how to do it.

Thanks for the help! Indeed I knew not much about these functions, but I 
googled something about what You wrote and I think I got it right :]

I had a problem with the number of "xfce4-panel <defunct>" growing to 
milions but I set a kill()er for them and now I think it works without 
any problems..
The trace can be found in /tmp dir - where are the top.pid top.old and 
top.lista files.

The forked child does a system() call to `top` to retrieve info on 
running processes and channels it to top.lista.
The top.pid contains the forked child's pid, to trace the status of it,
when it's over a kill() signal is sent to get rid of the zombie.
Then the program retrieves data from top.lista, stores the parsed 
version in top.old and forks a new process.
While the process is running again, the top.old is used for data source 
and so on...

The updated (and I hope final) version is already available at the 
standard location:
http://szift.org/xfce/xfce4-cpugraph-plugin-szifted.tar.bz2

Have a nice run :)

--
Best wishes
?ukasz Hejnak


From szift at szift.org  Sat Sep 17 19:27:59 2005
From: szift at szift.org (=?ISO-8859-2?Q?=A3ukasz_Hejnak?=)
Date: Sat, 17 Sep 2005 19:27:59 +0200
Subject: 'hacking' some of XFCE goodies
In-Reply-To: <432C4E4E.3010803@szift.org>
References: <4325CDC0.3060208@szift.org>	<4327ECE5.6070807@szift.org>	<432A99A9.6070901@szift.org> <20050917161708.00005edf@ACER_ONDRA> <432C4E4E.3010803@szift.org>
Message-ID: <432C521F.2010404@szift.org>

?ukasz Hejnak wrote:
> Hi..
  > The updated (and I hope final) version is already available at the
> standard location:
> http://szift.org/xfce/xfce4-cpugraph-plugin-szifted.tar.bz2
> 
> Have a nice run :)
> 
> -- 
> Best wishes
> ?ukasz Hejnak

PS. I added a rather rich bug report, to enable it just turn
#define DEBUG 0 into #define DEBUG 1
in the 6 line of the panel-plugin/cpu.c in the package

If any errors would appear, please enable debug as writen above then run
startxfce4 >& xfce4.log
then compile the plugin, install it and add to the panel,
let it work a while (if it doesn't crash the panel).
Then close the xfce, and send me the xfce4.log file.
(best compressed with: bzip2 -9 xfce4.log)
This should give enough info on the problem to fix it.


From nickschermer at gmail.com  Sat Sep 17 19:52:12 2005
From: nickschermer at gmail.com (Nick Schermer)
Date: Sat, 17 Sep 2005 19:52:12 +0200
Subject: Updated Xfce4-clipman-plugin
In-Reply-To: <4abe354905091710506a4f8a3a@mail.gmail.com>
References: <4abe354905091710506a4f8a3a@mail.gmail.com>
Message-ID: <4abe3549050917105212513a76@mail.gmail.com>

Xfce4-clipman-plugin-0.5<http://home.quicknet.nl/qn/prive/nickschermer/files/xfce4-clipman-plugin-0.5.tar.gz>

I've added/delete the following futures:

* Save clipboard content on exit (option)
* Prevent empty clipboard (copy latest item when system clipboard is empty)
* Option to disable selection
* Slider for history size
* When resizing the history no content is lost
* Characters in menu items (option) 
* New loop for creating menu items
* Copy icon for the menu item currently in the clipboard (is not always the 
latest)
* Icon for Clipboard History and clear clipboard
* Removed the drag/drop signal (couldn't figure out how to use it, so 
removed it) 
* New option dialog
* Cleared some code, added more comments, use tabs
* Remove item numbers, it will be back later as an option (I hope :P)

TODO:

* it depends on the iter place if new or old items are 
lost when resizing history size (new size is smaller)
* Items number (option)
* If string it to long for the menu: show begin...end (option)
* Sometimes the clipboard crashes with lots of text after
restoring the data 
* We use libxfce4util's rc function for save/restore the
clipper, but it has some limitations for the string length

I hope it's stable enough to use, because I started programming in C for the 
past
1,5 week (=NOOB), so I think you'll find some bugs, but I've tested it and 
it seems to work 
pretty well. Let me know what you think about it.

I've have some new idea for the clipman plugin and i think I'll create those 
for the
new panel Jasper is working on.

Greets, Nick Schermer (AK Xerverius)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/xfce-goodies-dev/attachments/20050917/c292ea40/attachment.html>

From timystery at arcor.de  Sat Sep 17 21:55:34 2005
From: timystery at arcor.de (timystery at arcor.de)
Date: Sat, 17 Sep 2005 21:55:34 +0200 (CEST)
Subject: Aw: RE: xfce4-mount-plugin i18n ? (fwd)
Message-ID: <202098.1126986934602.JavaMail.ngmail@webmail-04.arcor-online.net>

Hi! 

Sponsor for i18n found, at http://mitglied.lycos.de/timshome/download/xfce4-mount-plugin_0.3.0_i18n.tar.gz and http://mitglied.lycos.de/timshome/download/xfce4-mount-plugin_0.3.0_i18n.tar.bz2 there is the version with i18n enabled. 
german translation is working; lt, ko, el, fr can very easily be achieved as they are already included in the configuration files used from the sensors-plugin. 

I did not change the version number since I'm not going to become the maintainer as I use rox or aterm to mount devices ;) 

It would be very nice to have the plugin also use svn.... I could then upload all the autoconf files to make the project accessible to developers and also to translators. 

Bye, Fabian 

(I also responded to xfce-goodies as its more a goodies topic than xfce-dev) 


> 
> Hi, Dear Devs! 
> 
> Jean-Baptiste Dulong (jb_dul KUKAC yahoocom) wrote, he is not maintaning 
> [his great] mount plugin anymore. 
> 
> Oh. I'm using standarly installed Debian stable + xfce4.current from 
> Benny's Xfld repo or from source, so i'm (& many traditional users are) 
> using mount plugin + i'm not dev but active hungarian translator, so i'm 
> highly motivated is hungarian Mount Plugin translation, but it's not 
> i18n-ed yet. 
> 
> Dear Devs!:-) Any Sponsor ? 
> 
> THX: sas aka satie - hungarian translator


From kieroglu at math.washington.edu  Sun Sep 18 06:21:14 2005
From: kieroglu at math.washington.edu (Kemal Eroglu)
Date: Sat, 17 Sep 2005 21:21:14 -0700 (PDT)
Subject: Xfce timer plugin
In-Reply-To: <Pine.LNX.4.61.0509072230520.2948@zeno2.math.washington.edu>
References: <Pine.LNX.4.61.0509072230520.2948@zeno2.math.washington.edu>
Message-ID: <Pine.LNX.4.61.0509172114570.16657@zeno3.math.washington.edu>



   Hi again,

   Here's the second version with slight modifications. I'm just sending 
the two modified files. I added the option for choosing progress bar 
orientation. I'm still desperately looking for a way to shrink the size of 
the main container widget. I also added two separators on each side to 
fill the unused space.

   Ilgar


On Wed, 7 Sep 2005, Kemal Eroglu wrote:

>
>  Hi all,
>
>  Here's my version 0.1 of a timer plugin for XFCE4. It's similar to KTeaTime 
> for those of you who are faimilar with KDE. You can define a number of 
> alarms. You can either specify a countdown period or a time of the day for 
> the alarm. You select the one you want from a popup menu and start the 
> coundown. When the countdown ends, a Gtk warning window is displayed, or, a 
> command specified by the user is run.
>
>  Clearly, this first version is waiting for testers and suggestions. Some of 
> the ideas in my mind are in the TODO file. The only serious issue right now 
> is the progressbar: This is the main widget in the plugin display; it "fills" 
> as the countdown approaches to its end. I'm trying to get a thin progressbar 
> but the panel insists on producing a big, fat one. One other issue is that 
> you get some warnings when you remove the plugin right after you add it to 
> the panel. It doesn't crash though. It appears to be related to the freeing 
> of a gtk_list_store object (pd->list in the code).
>
>  Finally: I'm supposing that this is a plugin which would be added to the 
> panel only when needed; but one also would like to keep the settings. The XML 
> system provided in the plugin read/write_config functions loses the settings 
> when the plugin is removed from the panel. For this reason I'm currently 
> writing the settings to the file
>
> ~/.config/xfce4/panel/timer_settings
>
>  It's a file with the format of a GKeyFile. This may not be a very good 
> solution; and I'm waiting for hints on how to properly achieve the purpose.
>
>  Test and enjoy!
>
>  Ilgar
-------------- next part --------------
/*  
 *
 *  Copyright (C) 2005 Kemal Ilgar Eroglu <kieroglu at math.washington.edu>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Library General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */


#define 	TIMEOUT_TIME 2000 			/* Countdown update period in 
							   milliseconds */

typedef struct {
  GtkWidget 	*eventbox,				/* Main container widget
		 					   in ctrl->base */
		*box,					/* v/hbox that holds pbar */  
		*pbar, 					/* Progress bar */
		*tree, 					/* Treeview */
		*buttonadd,*buttonedit,*buttonremove,	/* options window buttons */
		*menu,
		*base;					/* ctrl->base */
  GtkListStore *list;					/* The alarms list */
  gint 		count,					/* Nubmer of alarms */
		selected,timeout_period_in_sec;		/* Active countdown period */
  guint 	timeout;				/* The timeout ID */
  gboolean 	timer_on;				/* TRUE if countdown 
							   is in progress */
  GtkTooltips 	*tip;					/* Tooltip for panel */
  gboolean 	is_horizontal;				/* Progressbar alignment */
  GArray 	*menuarray;				/* Array of popup 
							   menuitems (alarms). These 
							   are used to find the index
							   of the selected menuitem. */
  gchar 	*timeout_command;			/* Command when countdown ends */
  GTimer 	*timer;					/* Keeps time elapsed */
} plugin_data;

typedef struct {
  GtkSpinButton	*timeh,*times,*timem,			/* Spinbuttons for h-m-s 
							   format */
		*time_h,*time_m;			/* Spinbuttons for 24h format */
  GtkEntry 	*name,*command;				/* Name, and command entries */
  GtkRadioButton *rb1;					/* Radio button for the
							   h-m-s format */
  GtkWindow 	*window;				/* Add/Edit window */
  plugin_data 	*pd;					/* Plugin data */
} alarm_data;
-------------- next part --------------
/*  
 *
 *  Copyright (C) 2005 Kemal Ilgar Eroglu <kieroglu at math.washington.edu>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Library General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */



#define TIMEOUT_TIME 	2000 /* Countdown update period in milliseconds */
#define PBAR_THICKNESS 	16

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>

#include <gtk/gtk.h>

#include <libxfce4util/libxfce4util.h>
#include <libxfcegui4/xfce_iconbutton.h>

#include <panel/xfce.h>
#include <panel/plugins.h>

#include "xfcetimer.h"

void make_menu(plugin_data *pd);


/**
 * This is the timeout function that updates the 
 * tooltip, pbar and keeps track of elapsed time
**/
static gboolean timeout_function (gpointer data){

  plugin_data *pd=(plugin_data *)data;
  gint elapsed_sec,remaining;
  gchar tiptext[32];
  GtkWidget *dialog;
  gulong zip;

  elapsed_sec=(gint)g_timer_elapsed(pd->timer,&zip);

  /*g_fprintf(stderr,"\nElapsed %d seconds of %d",elapsed_sec,pd-
					>timeout_period_in_sec);*/

  /* If countdown is not over, update tooltip */
  if(elapsed_sec < pd->timeout_period_in_sec){

     remaining=pd->timeout_period_in_sec-elapsed_sec;

     if(remaining>=3600)
       g_snprintf(tiptext,31,"%dh %dm %ds left",remaining/3600, (remaining%3600)/60, 
			remaining%60);
     else if (remaining>=60)
       g_snprintf(tiptext,31,"%dm %ds left",remaining/60, remaining%60);
     else
       g_snprintf(tiptext,31,"%ds left",remaining);

     gtk_progress_bar_set_fraction	(GTK_PROGRESS_BAR(pd->pbar),
					((gdouble)elapsed_sec)/pd->  						timeout_period_in_sec);  

     gtk_tooltips_set_tip(pd->tip,pd->base,tiptext,NULL);

     return TRUE;
     
  }

  /* Countdown is over, stop timer and free resources */

  /*g_fprintf(stderr,"\nTimer command is ==> %s...",pd->timeout_command);*/
    
  if(strlen(pd->timeout_command)>0)
     g_spawn_command_line_async (pd->timeout_command,NULL);
  else{
      gtk_progress_bar_set_fraction(GTK_PROGRESS_BAR(pd->pbar),1);  
      dialog = gtk_message_dialog_new 	(NULL,
                                  	GTK_DIALOG_MODAL,
                                  	GTK_MESSAGE_WARNING,
                                  	GTK_BUTTONS_CLOSE,
                                  	"Beeep! :) \nTime is up!");
      gtk_dialog_run (GTK_DIALOG (dialog));
      gtk_widget_destroy (dialog);
  }

  if(pd->timer)
     g_timer_destroy(pd->timer);
  pd->timer=NULL;
  gtk_tooltips_disable(pd->tip);
  if(pd->timeout_command)
     g_free(pd->timeout_command);

  pd->timeout_command=NULL;
  pd->timeout=0;

  pd->timer_on=FALSE;

  /* reset pbar */
  gtk_progress_bar_set_fraction(GTK_PROGRESS_BAR(pd->pbar),0);  

  make_menu(pd);

  /* This function won't be called again */
  return FALSE;

}

/**
 * This is the callback function called when a timer
 * is selected in the popup menu
**/

static void timer_selected (GtkWidget* menuitem, GdkEventButton* event, gpointer data){

  plugin_data *pd=(plugin_data *)data;
  gint row_count;

  row_count=0;

  /* Find the index of the menuitem selected, save it in pd->selected. Not very 
     elegant, though */
  while (GTK_MENU_ITEM(menuitem)!=g_array_index(pd->menuarray,GtkMenuItem*,row_count) )
     row_count++;
   
  pd->selected=row_count;

  /*g_fprintf(stderr,"\n Selecten menuitem is %d",row_count);*/
  
}

/**
 * This is the callback function called when the
 * start/stop item is selected in the popup menu
**/

static void start_stop_selected (GtkWidget* menuitem, GdkEventButton* event, gpointer 
										data){

  plugin_data *pd=(plugin_data *)data;
  GtkTreeIter iter;
  gboolean valid;
  GSList *group=NULL;
  gchar *timerinfo,*tout_command;
  gchar temp[8];
  gint row_count,cur_h,cur_m,cur_s,time;
  gint timeout_period;
  gboolean is_cd;
  GTimeVal timeval;
  struct tm *current;

  /* If counting down, we stop the timer and free the resources */
  if(pd->timer_on){
      
    /*g_fprintf(stderr,"\nTimer is running, shutting down...");*/
    if(pd->timer)
       g_timer_destroy(pd->timer);
    if(pd->timeout)
       g_source_remove(pd->timeout);
    if(pd->timeout_command)
       g_free(pd->timeout_command);

    pd->timer=NULL;
    pd->timeout_command=NULL;
    pd->timeout=0;
    pd->timer_on=FALSE;

    /* Disable tooltips, reset pbar */
    gtk_tooltips_disable(pd->tip);
    gtk_progress_bar_set_fraction(GTK_PROGRESS_BAR(pd->pbar),0);  

    /* update menu*/
    make_menu(pd);

    return;

  }

  /* If we're here then the timer is off, so we start it */

  /*g_fprintf(stderr,"\nStarting timer...");*/

  valid = gtk_tree_model_get_iter_first (GTK_TREE_MODEL(pd->list), &iter);
  row_count=0;
  
  /* Empty timer list-> Nothing to do. pd->selected=0, though. */
  if(!valid)
    return;

  /* Search the list item with the  right index */
  while (valid && row_count!=pd->selected){
      valid = gtk_tree_model_iter_next (GTK_TREE_MODEL(pd->list), &iter);
      row_count++;
  }

  gtk_tree_model_get 	(GTK_TREE_MODEL(pd->list), &iter, 2, &timerinfo, 3, 
			&tout_command, 4, &is_cd ,5, &time, -1);

  /* This will not be freed until the timeout is destroyed */
  pd->timeout_command=tout_command;

  /* If it's a 24h type alarm, we find the difference with current time
     Here 'time' is in minutes */
  if(!is_cd) {

     g_get_current_time(&timeval);
     current = localtime((time_t *)&timeval.tv_sec);
     strftime(temp,7,"%H",current);
     cur_h=atoi(temp);
     /*g_fprintf(stderr,"\n Current time: %d : ",cur_h);*/
     strftime(temp,7,"%M",current);
     cur_m=atoi(temp);
     /*g_fprintf(stderr,"%d : ",cur_m);*/
     strftime(temp,7,"%S",current);
     cur_s=atoi(temp);
     /*g_fprintf(stderr,"%d \n",cur_s);*/

     timeout_period=time*60 - ((60*cur_h + cur_m)*60 + cur_s);
 
     if(timeout_period <0)
        timeout_period+= 24*60*60;
 
  }
  /* Else 'time' already gives the countdown period in seconds */ 
  else
      timeout_period=time;

  pd->timeout_period_in_sec=timeout_period;

  /* start the timer */
  pd->timer=g_timer_new();
  pd->timer_on=TRUE;
  
  /* update stuff */
  make_menu(pd);

  gtk_tooltips_set_tip(pd->tip, GTK_WIDGET(pd->base), timerinfo, NULL);
  gtk_tooltips_enable(pd->tip);
  g_free(timerinfo);

  g_timer_start(pd->timer);
  pd->timeout = g_timeout_add(TIMEOUT_TIME, timeout_function,pd);


}

/**
 * Callback when clicking on pbar. Pops the menu up/down
**/
static void pbar_clicked (GtkWidget *pbar, GdkEventButton *event, gpointer data){

    plugin_data *pd=(plugin_data *)data;

    /*g_fprintf(stderr,"\nReceived click on button %d",event->button);*/
 

    if(!pd->menu){
      g_fprintf(stderr,"\nNo menu\n");
      return;
    }

    if(event->button==1)
      gtk_menu_popup (GTK_MENU(pd->menu),NULL,NULL,NULL,NULL,event->button,event->time);
    else
      gtk_menu_popdown(GTK_MENU(pd->menu));

}

/**
 * This function generates the popup menu
**/
void make_menu(plugin_data *pd){

  GtkTreeIter iter;
  gboolean valid;
  GSList *group=NULL;
  GtkWidget *menuitem;
  gchar *timername,*timerinfo;
  gchar itemtext[256];
  gint row_count;


  /* Destroy the existing one */
  if(pd->menu)
    gtk_widget_destroy(pd->menu);

  if(pd->menuarray)
    g_array_free(pd->menuarray,TRUE);

  pd->menu=gtk_menu_new();
  pd->menuarray=g_array_new(FALSE,TRUE,sizeof(menuitem));


  valid = gtk_tree_model_get_iter_first (GTK_TREE_MODEL(pd->list), &iter);
  row_count=0;

  while (valid){
    
      /* Run through the list, read name and timer period info */

      /*g_fprintf(stderr,"\nMaking menuitem %d while selected is %d",row_count,pd-> 
								selected);*/
      gtk_tree_model_get(GTK_TREE_MODEL(pd->list),&iter,1,&timername,2,&timerinfo,-1);
      g_snprintf(itemtext,255,"%s (%s)",timername,timerinfo);
      menuitem=gtk_radio_menu_item_new_with_label(group,itemtext);
      gtk_widget_show(menuitem);
      g_free(timername);
      g_free(timerinfo);
      group = gtk_radio_menu_item_get_group (GTK_RADIO_MENU_ITEM (menuitem));
      g_signal_connect	(G_OBJECT(menuitem),"button_press_event", 
			G_CALLBACK(timer_selected),pd);
      /* The selected timer is always active */
      if(row_count==pd->selected)
        gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(menuitem),TRUE);
      else if(pd->timer_on) /* others are disabled when timer is already running */
        gtk_widget_set_sensitive(GTK_WIDGET(menuitem),FALSE);

      gtk_menu_shell_append(GTK_MENU_SHELL(pd->menu),menuitem);

      /*g_fprintf(stderr,"\nAdding menuitem with label : %s",itemtext);*/

      /* We add the address of menuitem to the array */
      g_array_append_val(pd->menuarray,menuitem);
      
      valid = gtk_tree_model_iter_next (GTK_TREE_MODEL(pd->list), &iter);
      row_count++;
  }

  /* Horizontal line (empty item) */
  menuitem=gtk_menu_item_new();
  gtk_menu_shell_append(GTK_MENU_SHELL(pd->menu),menuitem);
  gtk_widget_show(menuitem);

  /* Start/stop menu item */
  if(pd->timer_on)
    menuitem=gtk_menu_item_new_with_label("Stop timer");
  else
    menuitem=gtk_menu_item_new_with_label("Start timer");

  gtk_menu_shell_append	(GTK_MENU_SHELL(pd->menu),menuitem);
  g_signal_connect	(G_OBJECT(menuitem),"button_press_event",
			G_CALLBACK(start_stop_selected),pd);
  gtk_widget_show(menuitem);

  gtk_widget_show(pd->menu);
    
}


/**
 * Callback to the OK button in the Add window
**/
static void ok_add(GtkButton *button, gpointer data){

  alarm_data *adata = (alarm_data *)data;
  GtkTreeIter iter;
  gint t1,t2,t3,t;
  gchar timeinfo[16];

  /* Add item to the list */
  gtk_list_store_append(adata->pd->list,&iter);
    
  gtk_list_store_set(GTK_LIST_STORE(adata->pd->list),&iter,
			0,adata->pd->count,
			1,gtk_entry_get_text(GTK_ENTRY(adata->name)),
			3,gtk_entry_get_text(GTK_ENTRY(adata->command)), 
			4,gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(adata-> 
									rb1)),-1);
  /* Item count goes up by one */
  adata->pd->count=adata->pd->count+1;

  /* If the h-m-s format was chosen, convert time to seconds,
     save the choice into the list */
  if(gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(adata->rb1))){

    t1=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(adata->timeh));
    t2=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(adata->timem));
    t3=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(adata->times));
    t=t1*3600+t2*60+t3;

    gtk_list_store_set(GTK_LIST_STORE(adata->pd->list),&iter,5,t,-1);
    if(t1>0)
       g_snprintf(timeinfo,15,"%dh %dm %ds",t1,t2,t3);
    else if(t2>0)
       g_snprintf(timeinfo,15,"%dm %ds",t2,t3);
    else
       g_snprintf(timeinfo,15,"%ds",t3);

    gtk_list_store_set(GTK_LIST_STORE(adata->pd->list),&iter,2,timeinfo,-1);
  }
  else{ /* The 24h format. Save time in minutes */

    t1=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(adata->time_h));
    t2=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(adata->time_m));
    t=t1*60+t2;
    gtk_list_store_set(GTK_LIST_STORE(adata->pd->list),&iter,5,t,-1);
    g_snprintf(timeinfo,9,"At %02d:%02d",t1,t2);
    gtk_list_store_set(GTK_LIST_STORE(adata->pd->list),&iter,2,timeinfo,-1);

  }

  /* Update menu */  
  make_menu(adata->pd);

  /* Free resources */
  gtk_widget_destroy(GTK_WIDGET(adata->window));

  g_free(adata);
}



/**
 * Callback for cancelling Add and Edit. Just closes the window :).
**/
static void cancel_add_edit(GtkButton *button, gpointer data){

  alarm_data *adata=(alarm_data *)data;
 
  gtk_widget_destroy(GTK_WIDGET(adata->window));

  g_free(adata);

}


/**
 * Callback for OK button on Edit window. See ok_add for comments.
**/
static void ok_edit(GtkButton *button, gpointer data){

  alarm_data *adata = (alarm_data *)data;
  GtkTreeIter iter;
  gint t1,t2,t3,t;
  gchar timeinfo[10];

  GtkTreeSelection *select;
  GtkTreeModel *model;

  select = gtk_tree_view_get_selection (GTK_TREE_VIEW (adata->pd->tree));

  if (gtk_tree_selection_get_selected (select, &model, &iter))
  {    
     gtk_list_store_set(GTK_LIST_STORE(adata->pd->list),&iter,
			1,gtk_entry_get_text(GTK_ENTRY(adata->name)),
			3,gtk_entry_get_text(GTK_ENTRY(adata->command)), 
			4,gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(adata-> 
									rb1)),-1);
     if(gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(adata->rb1))){

        t1=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(adata->timeh));
        t2=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(adata->timem));
        t3=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(adata->times));
        t=t1*3600+t2*60+t3;
        gtk_list_store_set(GTK_LIST_STORE(adata->pd->list),&iter,5,t,-1);
       if(t1>0)
          g_snprintf(timeinfo,15,"%dh %dm %ds",t1,t2,t3);
       else if(t2>0)
          g_snprintf(timeinfo,15,"%dm %ds",t2,t3);
       else
          g_snprintf(timeinfo,15,"%ds",t3);

        gtk_list_store_set(GTK_LIST_STORE(adata->pd->list),&iter,2,timeinfo,-1);
      }
      else{

        t1=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(adata->time_h));
        t2=gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(adata->time_m));
        t=t1*60+t2;
        gtk_list_store_set(GTK_LIST_STORE(adata->pd->list),&iter,5,t,-1);
        g_snprintf(timeinfo,9,"At %02d:%02d",t1,t2);
        gtk_list_store_set(GTK_LIST_STORE(adata->pd->list),&iter,2,timeinfo,-1);

      }
  
  }

  make_menu(adata->pd);

  gtk_widget_destroy(GTK_WIDGET(adata->window));

  g_free(adata);
}


/**
 * Callback to the Add button in options window.
 * Creates the Add window.
**/
static void add_edit_clicked (GtkButton *buttonn, gpointer data){

  plugin_data *pd = (plugin_data *)data;

  GtkWindow *window;
  GtkLabel *label;
  GtkEntry *name,*command;
  GtkSpinButton *timeh,*timem,*times,*time_h,*time_m;
  GtkRadioButton *rb1,*rb2;
  GtkWidget *hbox,*vbox,*button;
  alarm_data *adata=g_new(alarm_data,1);
  gchar *nc; gboolean is_cd; gint time;
  GtkTreeIter iter;
  GtkTreeSelection *select;
  GtkTreeModel *model;

  window = (GtkWindow *)gtk_window_new(GTK_WINDOW_TOPLEVEL);

  adata->window=window;
  adata->pd=pd;
  
  gtk_window_set_modal(GTK_WINDOW(window),TRUE);

  vbox=gtk_vbox_new(FALSE,0);
  gtk_container_add(GTK_CONTAINER(window),vbox);

  /***********/
  hbox=gtk_hbox_new(TRUE,0);
  gtk_box_pack_start(GTK_BOX(vbox),hbox,FALSE,FALSE,0);  

  label = (GtkLabel *)gtk_label_new ("Name");
  name = (GtkEntry *) gtk_entry_new_with_max_length(1023);
  adata->name=name;

  gtk_box_pack_start(GTK_BOX(hbox),GTK_WIDGET(label),TRUE,TRUE,0);  
  gtk_box_pack_start(GTK_BOX(hbox),GTK_WIDGET(name),TRUE,TRUE,0);  

  /**********/
  rb1=(GtkRadioButton *)gtk_radio_button_new_with_label(NULL,"Enter the countdown time");
  rb2=(GtkRadioButton *)gtk_radio_button_new_with_label(gtk_radio_button_get_group
					(rb1),"Enter the time of alarm (24h format)");
  adata->rb1=rb1;

  gtk_box_pack_start(GTK_BOX(vbox),GTK_WIDGET(rb1),TRUE,TRUE,0);

  hbox=gtk_hbox_new(FALSE,0);
  gtk_box_pack_start(GTK_BOX(vbox),GTK_WIDGET(hbox),TRUE,TRUE,0);  

  timeh = (GtkSpinButton *)gtk_spin_button_new_with_range(0,23,1);
  gtk_box_pack_start(GTK_BOX(hbox),GTK_WIDGET(timeh),FALSE,FALSE,0);  
  adata->timeh=timeh;
  label = (GtkLabel *)gtk_label_new ("h");
  gtk_box_pack_start(GTK_BOX(hbox),GTK_WIDGET(label),FALSE,FALSE,2);
  timem = (GtkSpinButton *)gtk_spin_button_new_with_range(0,59,1);
  gtk_box_pack_start(GTK_BOX(hbox),GTK_WIDGET(timem),FALSE,FALSE,5);  
  adata->timem=timem;
  label = (GtkLabel *)gtk_label_new ("m");
  gtk_box_pack_start(GTK_BOX(hbox),GTK_WIDGET(label),FALSE,FALSE,2);
  times = (GtkSpinButton *)gtk_spin_button_new_with_range(0,59,1);
  gtk_box_pack_start(GTK_BOX(hbox),GTK_WIDGET(times),FALSE,FALSE,5);  
  adata->times=times;
  label = (GtkLabel *)gtk_label_new ("s");
  gtk_box_pack_start(GTK_BOX(hbox),GTK_WIDGET(label),FALSE,FALSE,2);

  label = (GtkLabel *)gtk_label_new ("\nor\n");
  gtk_box_pack_start(GTK_BOX(vbox),GTK_WIDGET(label),TRUE,TRUE,0);


  gtk_box_pack_start(GTK_BOX(vbox),GTK_WIDGET(rb2),TRUE,TRUE,0);

  hbox=gtk_hbox_new(FALSE,0);
  gtk_box_pack_start(GTK_BOX(vbox),GTK_WIDGET(hbox),TRUE,TRUE,0);  

  time_h = (GtkSpinButton *)gtk_spin_button_new_with_range(0,23,1);
  gtk_box_pack_start(GTK_BOX(hbox),GTK_WIDGET(time_h),FALSE,FALSE,0);  
  adata->time_h=time_h;
  label = (GtkLabel *)gtk_label_new (":");
  gtk_box_pack_start(GTK_BOX(hbox),GTK_WIDGET(label),FALSE,FALSE,5);
  time_m = (GtkSpinButton *)gtk_spin_button_new_with_range(0,59,1);
  gtk_box_pack_start(GTK_BOX(hbox),GTK_WIDGET(time_m),FALSE,FALSE,5);  
  adata->time_m=time_m;

  /****************/

  label = (GtkLabel *)gtk_label_new ("\nThe command to run");
  gtk_box_pack_start(GTK_BOX(vbox),GTK_WIDGET(label),TRUE,TRUE,0);
  command = (GtkEntry *)gtk_entry_new_with_max_length(1023);
  adata->command=command;
  gtk_box_pack_start(GTK_BOX(vbox),GTK_WIDGET(command),TRUE,TRUE,0);

  /****************/

  hbox=gtk_hbox_new(TRUE,0);
  gtk_box_pack_start(GTK_BOX(vbox),hbox,TRUE,TRUE,0);  

  button=gtk_button_new_from_stock(GTK_STOCK_CANCEL);
  gtk_box_pack_start(GTK_BOX(hbox),button,TRUE,TRUE,0);
  g_signal_connect(G_OBJECT(button),"clicked",G_CALLBACK(cancel_add_edit),adata);

  button=gtk_button_new_from_stock(GTK_STOCK_OK);
  gtk_box_pack_start(GTK_BOX(hbox),button,TRUE,TRUE,0);  
  if(GTK_WIDGET(buttonn)==pd->buttonadd)
     g_signal_connect(G_OBJECT(button),"clicked",G_CALLBACK(ok_add),adata);
  else
     g_signal_connect(G_OBJECT(button),"clicked",G_CALLBACK(ok_edit),adata);

  

  /* If this is the add window, we're done */
  if(GTK_WIDGET(buttonn)==pd->buttonadd) {
    gtk_window_set_title(window,"Add new alarm");
    gtk_widget_show_all(GTK_WIDGET(window));
    return;
  }

  /* Else fill the values in the boxes with the current choices */
  select = gtk_tree_view_get_selection (GTK_TREE_VIEW (pd->tree));
  /*gtk_tree_selection_set_mode (select, GTK_SELECTION_SINGLE);*/

  if (gtk_tree_selection_get_selected (select, &model, &iter)){
      gtk_tree_model_get(model,&iter,1,&nc,-1);
      gtk_entry_set_text(GTK_ENTRY(name),nc);
      g_free(nc);

      gtk_tree_model_get(model,&iter,3,&nc,-1);
      gtk_entry_set_text(GTK_ENTRY(command),nc);
      g_free(nc);

      gtk_tree_model_get(model,&iter,4,&is_cd,-1);
      gtk_tree_model_get(model,&iter,5,&time,-1);

      if(is_cd){
         
         gtk_spin_button_set_value(GTK_SPIN_BUTTON(timeh),time/3600);
         gtk_spin_button_set_value(GTK_SPIN_BUTTON(timem),(time%3600)/60);
         gtk_spin_button_set_value(GTK_SPIN_BUTTON(times),time%60);
         gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(rb1),TRUE);
      }
      else{

         gtk_spin_button_set_value(GTK_SPIN_BUTTON(time_h),time/60);
         gtk_spin_button_set_value(GTK_SPIN_BUTTON(time_m),time%60);
         gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(rb2),TRUE);
         
      }
     
  }

  gtk_window_set_title(window,"Edit alarm");
  gtk_widget_show_all(GTK_WIDGET(window));

}


/**
 * Calllback for the remove button in the options
**/
static void remove_clicked(GtkButton *button, gpointer data){

  plugin_data *pd = (plugin_data *)data;

  GtkTreeIter iter,iter_remove;
  GtkTreeSelection *select;
  GtkTreePath *path;
  GtkTreeModel *model;
  gboolean valid;
  gint row_count;

  /* Get the selected row */
  select=gtk_tree_view_get_selection(GTK_TREE_VIEW(pd->tree));

  valid = gtk_tree_model_get_iter_first (GTK_TREE_MODEL(pd->list), &iter);

  row_count=0;

  while (valid){

     /* Re-index the other rows */

     /* The selected one is removed, the corresponding menuitem array is also 
        updated */
     if(gtk_tree_selection_iter_is_selected(select,&iter)){
       /*g_fprintf(stderr,"\n Removing node %d ...\n", row_count);*/
       iter_remove=iter; /* Mark to be deleted */
       g_array_remove_index(pd->menuarray,row_count);
       if(pd->selected==row_count) /* Update the index of the selected item */
          pd->selected=0; /* If the selected is deleted, new selected one is the first 
				one. The first radiomenuitem gets activated anyway */
       else if(pd->selected > row_count)
          pd->selected=pd->selected-1;  /* Those coming after are shifted one behind */
     }
     else{  
       /* Save new index on the remaning ones */
       gtk_list_store_set (pd->list, &iter, 0,row_count, -1);
       row_count++;
    }

    valid = gtk_tree_model_iter_next (GTK_TREE_MODEL(pd->list), &iter);

  }

  /* Remove the marked one */
  gtk_list_store_remove (pd->list, &iter_remove);

  /* Update item count and menu */
  pd->count=row_count;

  make_menu(pd);
  
}

/**
 * Adds the progressbar, taking into account the orientation.
 * pd->pbar is not destroyed, just reparented (saves fraction setting code etc.).
**/
static void add_pbar(plugin_data *pd){

  gtk_widget_hide(pd->eventbox);


  /* Always true except at initialization */
  if(pd->box){
    g_object_ref(G_OBJECT(pd->pbar));
    gtk_container_remove(GTK_CONTAINER(pd->box),pd->pbar);
    gtk_widget_destroy(pd->box);
  }

  /* vertical bar -- the default */
  if(!pd->is_horizontal){
    pd->box=gtk_hbox_new(TRUE,0);
    gtk_container_add(GTK_CONTAINER(pd->eventbox),pd->box);
    gtk_progress_bar_set_orientation	(GTK_PROGRESS_BAR(pd-> 
					pbar),GTK_PROGRESS_BOTTOM_TO_TOP);
    gtk_widget_set_size_request(GTK_WIDGET(pd->pbar),PBAR_THICKNESS,0);
    gtk_box_pack_start(GTK_BOX(pd->box),gtk_vseparator_new(),FALSE,FALSE,0);
    gtk_box_pack_start(GTK_BOX(pd->box),pd->pbar,FALSE,FALSE,0);
    gtk_box_pack_start(GTK_BOX(pd->box),gtk_vseparator_new(),FALSE,FALSE,0);
    
  }
  else{ /* horizontal bar */
    pd->box=gtk_vbox_new(TRUE,0);
    gtk_container_add(GTK_CONTAINER(pd->eventbox),pd->box);
    gtk_progress_bar_set_orientation	(GTK_PROGRESS_BAR(pd-> 
	  				pbar),GTK_PROGRESS_LEFT_TO_RIGHT);
    gtk_widget_set_size_request(GTK_WIDGET(pd->pbar),0,PBAR_THICKNESS);
    gtk_box_pack_start(GTK_BOX(pd->box),gtk_hseparator_new(),FALSE,FALSE,0);
    gtk_box_pack_start(GTK_BOX(pd->box),pd->pbar,FALSE,FALSE,0);
    gtk_box_pack_start(GTK_BOX(pd->box),gtk_hseparator_new(),FALSE,FALSE,0);

  }

  gtk_widget_show_all(pd->eventbox);
}

/**
 * Loads the list from a keyfile, then saves them in a list_store
**/ 
static void load_settings(plugin_data *pd)
{

  gchar groupname[8];
  gchar *timerstring;
  gint groupnum,time;
  gboolean is_cd;
  GtkTreeIter iter;
  GError *error=NULL;
  gchar settings[1024];
  
  GKeyFile *keyfile=g_key_file_new();

  /*g_fprintf(stderr,"\n Running read\n");*/

  g_snprintf(settings,1023,"%s/.config/xfce4/panel/timer_settings",g_get_home_dir());

  /*g_fprintf(stderr,"\n ** %s \n",settings);*/

  /*if(g_file_test(settings,G_FILE_TEST_EXISTS))*/ /* somehow this returns false */
    if(!g_key_file_load_from_file(keyfile,settings,G_KEY_FILE_NONE,&error))
       g_fprintf(stderr,"\n ==> %s\n",error->message);
  /*else{
    g_fprintf(stderr,"\nNokeyfile\n");
    return;
  }*/

  groupnum=0;
  g_sprintf(groupname,"G0");

  /*if(!g_key_file_has_group(keyfile,groupname))
    g_fprintf(stderr,"\nNo zero group");*/


  while(g_key_file_has_group(keyfile,groupname)){

     /*g_fprintf(stderr,"\nLoading item %d\n",groupnum);*/
     gtk_list_store_append(pd->list,&iter);

     timerstring=g_key_file_get_value(keyfile,groupname,"timername",NULL);
     gtk_list_store_set(pd->list,&iter,0,groupnum,1,timerstring,-1);
     g_free(timerstring);

     timerstring=g_key_file_get_value(keyfile,groupname,"timercommand",NULL);
     gtk_list_store_set(pd->list,&iter,3,timerstring,-1);
     /*g_fprintf(stderr,"\nLoaded timer command ==> %s... with length %d", 
						timerstring,strlen(timerstring));*/
     g_free(timerstring);

     timerstring=g_key_file_get_value(keyfile,groupname,"timerinfo",NULL);
     gtk_list_store_set(pd->list,&iter,2,timerstring,-1);

     g_free(timerstring);

     is_cd=g_key_file_get_boolean(keyfile,groupname,"is_countdown",NULL);
     time=g_key_file_get_integer(keyfile,groupname,"time",NULL);

     /* No longer needed, time info is also saved and read now
     if(is_cd){
        if(time<60)
          g_snprintf(timeinfo,15,"%02ds",time);
        else if (time < 3600)
          g_snprintf(timeinfo,15,"%02dm %02ds",time/60,time%60);
        else
          g_snprintf(timeinfo,15,"%02dh %d02m %02ds",time/3660,(time%3600)/60,time%60);
      }
     else 
          g_snprintf(timeinfo,15,"At %02d:%02d",time/60,time%60);
     */

     gtk_list_store_set(pd->list,&iter,4,is_cd,5,time,-1);

     groupnum++;
     g_snprintf(groupname,5,"G%d",groupnum);
   
  }

  pd->count=groupnum;
  

  /* Read other options */
  if(g_key_file_has_group(keyfile,"others"))
    pd->is_horizontal= g_key_file_get_boolean(keyfile,"others","is_horizontal",NULL);

  add_pbar(pd);  

  g_free(keyfile);

}


/**
 * Saves the list to a keyfile
**/ 
static void save_settings(plugin_data *pd){

  gchar *timername,*timercommand,*timerinfo;
  gint time;
  gboolean is_cd;
  gchar settings[1024];
  gchar settingsbak[1024];
  gchar line[1024];
  GtkTreeIter iter;
  gboolean valid;
  gint row_count;
  gsize size;

  GIOChannel *io;

  /*g_fprintf(stderr,"\n Running write\n");*/

  g_snprintf(settings,1023,"%s/.config/xfce4/panel/timer_settings",g_get_home_dir());

  io = g_io_channel_new_file(settings,"w",NULL);


  valid = gtk_tree_model_get_iter_first (GTK_TREE_MODEL(pd->list), &iter);

  row_count=0;

  while (valid){

      gtk_tree_model_get (GTK_TREE_MODEL(pd->list), &iter,
			1, &timername, 
			2, &timerinfo, 
			3, &timercommand, 
			4, &is_cd,
			5, &time, -1);

      g_snprintf(line,1023,"[G%d]\n",row_count);
      g_io_channel_write_chars(io,line,-1,&size,NULL);

      g_snprintf(line,1023,"timername=%s\n",timername);
      g_io_channel_write_chars(io,line,-1,&size,NULL);

      g_snprintf(line,1023,"time=%d\n",time);
      g_io_channel_write_chars(io,line,-1,&size,NULL);

      g_snprintf(line,1023,"timercommand=%s\n",timercommand);
      g_io_channel_write_chars(io,line,-1,&size,NULL);

      g_snprintf(line,1023,"timerinfo=%s\n",timerinfo);
      g_io_channel_write_chars(io,line,-1,&size,NULL);

      if(is_cd)
        g_io_channel_write_chars(io,"is_countdown=true\n",-1,&size,NULL);
      else
        g_io_channel_write_chars(io,"is_countdown=false\n",-1,&size,NULL);

      g_free(timername);
      g_free(timercommand);
      g_free(timerinfo);

      row_count ++;
      valid = gtk_tree_model_iter_next (GTK_TREE_MODEL(pd->list), &iter);
  }


  /* save the other options */  
  g_io_channel_write_chars(io,"\n[others]\n",-1,&size,NULL);

  if(pd->is_horizontal)
    g_io_channel_write_chars(io,"is_horizontal=true\n",-1,&size,NULL);
  else
    g_io_channel_write_chars(io,"is_horizontal=false\n",-1,&size,NULL);



  g_io_channel_flush(io,NULL);
  g_io_channel_close(io);

  g_free(io);



}


/**
 * Activates the Edit and Remove buttons when an item in the list is selected
**/

static void tree_selected (GtkTreeSelection *select, gpointer data){

  plugin_data *pd=(plugin_data *)data;

  gtk_widget_set_sensitive(pd->buttonedit,TRUE);
  gtk_widget_set_sensitive(pd->buttonremove,TRUE);

}

/**
 * Callback for the horizontal progressbar checkbox
**/

static void toggle_horiz (GtkToggleButton *button, gpointer data){

  plugin_data *pd=(plugin_data *)data;

  pd->is_horizontal = gtk_toggle_button_get_active(button);
 
  add_pbar(pd);

}

/**
 * create_sample_control
 *
 * Create a new instance of the plugin.
 * 
 * @control : #Control parent container
 *
 * Returns %TRUE on success, %FALSE on failure.
 **/
static gboolean
create_plugin_control (Control * ctrl)
{

  GtkWidget *base,*menu,*socket,*menuitem,*box,*pbar2;
  GtkTooltips *tooltip;
  xmlNodePtr write=NULL,read=NULL;
  char command[1024]; 


  plugin_data *pd=g_new(plugin_data,1);

  pd->base=GTK_WIDGET(ctrl->base);
  pd->count=0;
  pd->pbar=gtk_progress_bar_new();
  pd->list=gtk_list_store_new(6, 
		 G_TYPE_INT,     /* Column 0: Index */
		 G_TYPE_STRING,  /* Column 1: Name */
		 G_TYPE_STRING,  /* Column 2: Timer period/alarm time */
		 G_TYPE_STRING,  /* Command to run */
		 G_TYPE_BOOLEAN, /* TRUE= Is countdown, i.e. h-m-s format. 
				    FALSE= 24h format */
		 G_TYPE_INT);    /* Timer period in seconds if countdown.
				    Alarm time in minutes if 24h format is used,
				    (i.e. 60 x Hr + Min) */

  pd->eventbox=gtk_event_box_new();			 
  pd->box=NULL;
  pd->timer_on=FALSE;
  pd->is_horizontal=FALSE;
  pd->timeout=0;
  pd->buttonadd=NULL;
  pd->buttonedit=NULL;
  pd->buttonremove=NULL;
  pd->menu=NULL;
  pd->menuarray=NULL;
  pd->selected=0;
  pd->tip=gtk_tooltips_new();
  pd->timeout_command=NULL;
  pd->timer=NULL;

 
  /*gtk_box_set_child_packing(GTK_BOX(pd->base->parent),pd-> 
				base,FALSE,FALSE,0,GTK_PACK_START);*/

  gtk_tooltips_set_tip(pd->tip, GTK_WIDGET(ctrl->base), "", NULL);
  gtk_tooltips_disable(pd->tip);
  
  g_object_ref(pd->list);

  load_settings(pd);

  make_menu(pd);

  g_signal_connect	(G_OBJECT(pd->eventbox), "button_press_event",
 			G_CALLBACK(pbar_clicked), pd);

  gtk_progress_bar_set_bar_style	(GTK_PROGRESS_BAR(pd->pbar), 
					GTK_PROGRESS_CONTINUOUS);
  gtk_progress_bar_set_fraction(GTK_PROGRESS_BAR(pd->pbar),0);

  add_pbar(pd);

  /* Trying to get a thin box, but no way */
  gtk_widget_set_size_request(pd->eventbox,0,0);
  gtk_widget_set_size_request(GTK_WIDGET(ctrl->base),-1,-1);
  gtk_container_add(GTK_CONTAINER(ctrl->base),pd->eventbox);

  gtk_widget_show_all(GTK_WIDGET(ctrl->base));

  ctrl->data = (gpointer) pd;

  ctrl->with_popup = FALSE;

  return(TRUE);
}


/**
 * sample_read_config
 *
 * @control : the #Control to read configuration for
 * @node    : an #xmlNodePtr (part of the panel config file) containing the
 *            configuration.
 **/
static void
plugin_read_config (Control * control, xmlNodePtr node)
{

}

/**
 * sample_write_config
 *
 * @control : the #Control to write configuration for
 * @node    : an #xmlNodePtr (part of the panel config file) containing the
 *            configuration.
 **/
static void
plugin_write_config (Control * control, xmlNodePtr parent)
{


}


/**
 * sample_attach_callback
 *
 * @control  : the #Control to attach callbacks to
 * @signal   : the signal name
 * @callback : callback function
 * @data     : user data
 *
 * The plugin is expected to run g_signal_connect() on all widgets that
 * receive events, at least one. This is used, for example to connect the
 * right-click menu.
 **/
static void
sample_attach_callback (Control * control, const char *signal,
			GCallback callback, gpointer data)
{

}


/**
 * sample_free
 *
 * free the memory allocated for a sample #Control
 *
 * @control : the #Control to free memory for.
 **/
static void
plugin_free (Control * ctrl)
{
  plugin_data *pd;



  g_return_if_fail(ctrl != NULL);

  g_return_if_fail(ctrl-> data != NULL);



  pd = (plugin_data*) ctrl->data;



  /* remove timeout */

  if (pd->timeout!=0) g_source_remove(pd->timeout);


  save_settings(pd);

  if(pd->timer)
    g_timer_destroy(pd->timer);

  if(pd->timeout_command)
    g_free(pd->timeout_command);

  gtk_object_destroy(GTK_OBJECT(pd->tip));

  if(pd->timeout)
    g_source_remove(pd->timeout);

  if(pd->menuarray)
    g_array_free(pd->menuarray,TRUE);


  /* destroy all widgets */

  gtk_widget_destroy(GTK_WIDGET(pd->eventbox));


  /* destroy the tooltips */
  /*gtk_object_destroy(GTK_OBJECT(pd->tip));*/

  if(G_IS_OBJECT(pd->list))
    g_free(pd->list);
  else
    g_fprintf(stderr,"\npd->list is non-object");


  /* free the plugin data structure */

  g_free(pd);
}



/* options dialog */
static void plugin_create_options (Control *ctrl, GtkContainer *con, GtkWidget *done) {

  plugin_data *pd=(plugin_data *)ctrl->data;

  GtkWidget *vbox=gtk_vbox_new(FALSE,0); /*outermost box */
  GtkWidget *hbox=gtk_hbox_new(FALSE,0); /* holds the treeview and buttons */
  GtkWidget *buttonbox,*button,*sw,*tree;
  GtkTreeSelection *select;
  GtkCellRenderer *renderer;
  GtkTreeViewColumn *column;
  GtkTreeIter iter;

  gtk_container_add(GTK_CONTAINER(con),vbox);
  gtk_box_pack_start(GTK_BOX(vbox),hbox,TRUE,TRUE,0);
  
  sw = gtk_scrolled_window_new (NULL, NULL);

  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (sw),
                                           GTK_SHADOW_ETCHED_IN);
  gtk_scrolled_window_set_policy (GTK_SCROLLED_WINDOW (sw),
				 GTK_POLICY_AUTOMATIC,
				 GTK_POLICY_AUTOMATIC);
  
  gtk_box_pack_start(GTK_BOX(hbox),sw,TRUE,TRUE,0);  

  tree=gtk_tree_view_new_with_model(GTK_TREE_MODEL(pd->list));
  pd->tree=tree;
  gtk_tree_view_set_rules_hint 	(GTK_TREE_VIEW (tree), TRUE);
  gtk_tree_selection_set_mode 	(gtk_tree_view_get_selection (GTK_TREE_VIEW (tree)),
				 GTK_SELECTION_SINGLE);
  
  renderer = gtk_cell_renderer_text_new ();

  column = gtk_tree_view_column_new_with_attributes ("Timer\nname", renderer,
							"text", 1, NULL);
  gtk_tree_view_append_column (GTK_TREE_VIEW (tree), column);


  column = gtk_tree_view_column_new_with_attributes ("Countdown period /\nAlarm time", 
							renderer, "text", 2, NULL);
  gtk_tree_view_append_column (GTK_TREE_VIEW (tree), column);

  column = gtk_tree_view_column_new_with_attributes ("Alarm command", renderer, 
							"text", 3, NULL);
  gtk_tree_view_append_column (GTK_TREE_VIEW (tree), column);


  if(tree)
     gtk_container_add(GTK_CONTAINER(sw),tree);
  else
     g_fprintf(stderr,"\n pd->tree is NULL\n");

  gtk_widget_set_size_request(GTK_WIDGET(sw),350,250);

  select = gtk_tree_view_get_selection (GTK_TREE_VIEW (pd->tree));
  gtk_tree_selection_set_mode (select, GTK_SELECTION_SINGLE);
  g_signal_connect 	(G_OBJECT (select), "changed", 
			G_CALLBACK(tree_selected), pd);


  buttonbox=gtk_vbutton_box_new();
  gtk_button_box_set_layout(GTK_BUTTON_BOX(buttonbox),GTK_BUTTONBOX_START);
  gtk_box_pack_start(GTK_BOX(hbox),buttonbox,FALSE,FALSE,0);

  button = gtk_button_new_from_stock (GTK_STOCK_ADD);
  pd->buttonadd=button;
  gtk_box_pack_start(GTK_BOX (buttonbox), button, FALSE, FALSE,0);
  gtk_widget_set_sensitive(button,TRUE);
  g_signal_connect (G_OBJECT (button), "clicked", G_CALLBACK(add_edit_clicked), 									pd);


  button = gtk_button_new_from_stock (GTK_STOCK_EDIT);
  pd->buttonedit=button;
  gtk_box_pack_start(GTK_BOX (buttonbox), button, FALSE, FALSE,0);
  gtk_widget_set_sensitive(button,FALSE);
  g_signal_connect (G_OBJECT (button), "clicked", G_CALLBACK(add_edit_clicked), 									pd);

  button = gtk_button_new_from_stock (GTK_STOCK_REMOVE);
  pd->buttonremove=button;
  gtk_box_pack_start(GTK_BOX (buttonbox), button, FALSE, FALSE,0);
  gtk_widget_set_sensitive(button,FALSE);
  g_signal_connect (G_OBJECT (button), "clicked", G_CALLBACK(remove_clicked), 										pd);

  gtk_box_pack_start(GTK_BOX(vbox),gtk_hseparator_new(),TRUE,TRUE,20);

  button=gtk_check_button_new_with_label("Horizontal progressbar");
  gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(button),pd->is_horizontal);
  g_signal_connect(G_OBJECT(button),"toggled",G_CALLBACK(toggle_horiz),pd);
  gtk_box_pack_start(GTK_BOX(vbox),button,TRUE,TRUE,0);

  gtk_widget_show_all(GTK_WIDGET(con));

}


/**
 * xfce_control_class_init
 *
 * Ideally, this should be the only exported symbol in the plugin, since this
 * is the only function that is directly accessed from the panel.
 *
 * Here you set up the virtual function table for the plugin and specify its
 * behaviour (e.g. uniqueness).
 * 
 * @cc : #ControlClass to initialize
 **/
G_MODULE_EXPORT void
xfce_control_class_init (ControlClass * cc)
{
    /*xfce_textdomain (GETTEXT_PACKAGE, LOCALEDIR, "UTF-8");*/

    /* Must be present: 
       - name            : unique id 
       - caption         : display name 
       - create_control  : create a new instance
       - attach_callback : connect a signal (e.g. right-click menu)
       - free            : free allocated resources of Control instance
     */
    cc->name = "xfce4_timerr";
    cc->caption = _("XFCE4 Timer");

    cc->create_control = (CreateControlFunc) create_plugin_control;

    cc->attach_callback = sample_attach_callback;
    cc->free = plugin_free;
    cc->create_options    = plugin_create_options;
    /* Optional, leave as NULL to get default behaviour
       - read_config     : read configuration from xml
       - write_config    : write configuration to xml
       - create_options  : create widgets for the options dialog
       - set_size        : set size (SMALL, NORMAL, LARGE or HUGE)
       - set_orientation : set orientation (HORIZONTAL or VERTICAL)
       - set_theme       : set icon theme
       - about           : show an about dialog
     */
    cc->read_config = plugin_read_config;
    cc->write_config = plugin_write_config;


}

/* Macro that checks panel API version */
XFCE_PLUGIN_CHECK_INIT



From timystery at arcor.de  Sun Sep 18 10:07:18 2005
From: timystery at arcor.de (timystery at arcor.de)
Date: Sun, 18 Sep 2005 10:07:18 +0200 (CEST)
Subject: Screenshot plugin
In-Reply-To: <Pine.LNX.4.61.0509172114570.16657@zeno3.math.washington.edu>
References: <Pine.LNX.4.61.0509172114570.16657@zeno3.math.washington.edu> <Pine.LNX.4.61.0509072230520.2948@zeno2.math.washington.edu>
Message-ID: <27722314.1127030838948.JavaMail.ngmail@webmail-06.arcor-online.net>

hi!

is anyone maintaining or going to soon implement the screenshot plugin?

otherwise i would implement a button-plugin which executes "import options filename" with the options being clicked together in the settings dialog and the filename entered into an entry field. no checks for overwriting existing files in first version, but later versions.

bye, fabian


From mihalyi at centrum.cz  Sun Sep 18 11:18:35 2005
From: mihalyi at centrum.cz (Ondrej Mihalyi)
Date: Sun, 18 Sep 2005 11:18:35 +0200
Subject: 'hacking' some of XFCE goodies
In-Reply-To: <432C4E4E.3010803@szift.org>
References: <4325CDC0.3060208@szift.org>
	<4327ECE5.6070807@szift.org>
	<432A99A9.6070901@szift.org>
	<20050917161708.00005edf@ACER_ONDRA>
	<432C4E4E.3010803@szift.org>
Message-ID: <20050918111835.00004a0c@ACER_ONDRA>

When you say you fork and then call system(), it was not what I meant.  More direct way is to call a variation of a function exec to run the top program (execl, execv, ... try 'man 3 exec' into console).  The advantage is that you spawn only the forked process, which upon calling something like execlp("top", "top", "options", "moreoptions", NULL) will replace your code in the forked child by the code of 'top' and execute it with given parameters.  (don't forget, that first parameter in unixes starts with the path to file name of the executable, therefore I wrote "top" twice in the argument list of function execlp)

BUT remember, 'top' doesn't have an option to save output to a file, so you have to redirect it's output to a file.
After fork(), but before exec(), you must open a file by function open() (similar to fopen, but returns integer - file descriptor instead of FILE*), call close(1) (close standard output), call dup2(filedesc, 1), close(filedesc).

Code snippet:
fork();
int fd = open("filename", O_CREAT|O_WRONLY|O_TRUNC);
close(1);
dup2(fd, 1);
close(fd);
execlp("top", "top", "options", "moreoptions", NULL);

Then you don't have to kill the new process, just in your main program call the function waitpid(pid_of_forked_process, &status, flags) to get rid of the defunct process (zombie) - you always have to call some variation of wait() function after calling fork to get rid of the zombie process.

If you set flags in waitpid to WNOHANG, waitpid becomes non blocking and you can periodically check if your spawned process finished and only then reread the top.lista file.

Even better way is to use system pipes in your program to directly read the output of top (not through file), but it's more complicated.  

I really hope I didn't cofuse you :) Ask me if you want more info.  Maybe you should read somewhere about linux system programming, it would sure help.

Cheers,

Ondrej

On Sat, 17 Sep 2005 19:11:42 +0200
> I had a problem with the number of "xfce4-panel <defunct>" growing to 
> milions but I set a kill()er for them and now I think it works without 
> any problems..
> The trace can be found in /tmp dir - where are the top.pid top.old and 
> top.lista files.
> 
> The forked child does a system() call to `top` to retrieve info on 
> running processes and channels it to top.lista.
> The top.pid contains the forked child's pid, to trace the status of it,
> when it's over a kill() signal is sent to get rid of the zombie.
> Then the program retrieves data from top.lista, stores the parsed 
> version in top.old and forks a new process.
> While the process is running again, the top.old is used for data source 
> and so on...
> 
> The updated (and I hope final) version is already available at the 
> standard location:
> http://szift.org/xfce/xfce4-cpugraph-plugin-szifted.tar.bz2
> 
> Have a nice run :)
> 
> --
> Best wishes
> _ukasz Hejnak
> _______________________________________________
> xfce-goodies-dev mailing list
> xfce-goodies-dev at lists.berlios.de
> http://lists.berlios.de/mailman/listinfo/xfce-goodies-dev


From timystery at arcor.de  Sun Sep 18 15:59:49 2005
From: timystery at arcor.de (timystery at arcor.de)
Date: Sun, 18 Sep 2005 15:59:49 +0200 (CEST)
Subject: Aw: Re: RE: xfce4-mount-plugin i18n ? (fwd)
In-Reply-To: <e12fd2db0509180358d44866e@mail.gmail.com>
References: <e12fd2db0509180358d44866e@mail.gmail.com> <Pine.LNX.4.56L0.0509171329370.28572@localhost>
	<19178292.1126985360164.JavaMail.ngmail@webmail-07.arcor-online.net>
	<e12fd2db050918034076f63b5a@mail.gmail.com>
Message-ID: <24110546.1127051989896.JavaMail.ngmail@webmail-06.arcor-online.net>

hi!

ukrainian and russion translations submitted, now version 0.3.2 at berlios. 
please try to ONLY use xfce-goodies-dev at berlios.de for further discussion, translations etc. on the mount-plugin, or at least xfce-i18n at xfce.org (dunno if this is the correct address)!

bye, fabian


----- Original Nachricht ----
Von:     Eugene Ostapets <eostapets at gmail.com>
An:      XFCE4 development list <xfce4-dev at xfce.org>
Datum:   18.09.2005 12:58
Betreff: Re: RE: xfce4-mount-plugin i18n ? (fwd)

> 18.09.05, Eugene Ostapets<eostapets at gmail.com> ???????(?):
> > 2005/9/17, timystery at arcor.de <timystery at arcor.de>:
> > > Hi!
> > >
> > > Sponsor for  i18n found, at
> http://mitglied.lycos.de/timshome/download/xfce4-mount-plugin_0.3.0_i18n.tar
> .gz and
> http://mitglied.lycos.de/timshome/download/xfce4-mount-plugin_0.3.0_i18n.tar
> .bz2 there is the version with i18n enabled.
> > > german translation is working; lt, ko, el, fr can very easily be
> achieved as they are already included in the configuration files used from
> the sensors-plugin.
> > russian traslation added, ukrainian comming soon
> ukrainian translation :)
> 
> -- 
> WBR,
> Eugene Ostapets
> uin: 23747217
> jid: eugene_ostapets at jabber.ru
> 
> 
> --------------------------------
> 
> _______________________________________________
> Xfce4-dev mailing list
> Xfce4-dev at xfce.org
> http://foo-projects.org/mailman/listinfo/xfce4-dev


From bugzilla-daemon at xfce.org  Mon Sep 19 00:14:12 2005
From: bugzilla-daemon at xfce.org (bugzilla-daemon at xfce.org)
Date: Sun, 18 Sep 2005 22:14:12 +0000 (UTC)
Subject: [Bug 1157]  New: GTK critical error fixup on specific laptops 
Message-ID: <20050918221412.2CC841F7049@espresso.foo-projects.org>

Do NOT reply to this email.  To make further comments on this bug, use
the URL below:
http://bugzilla.xfce.org/show_bug.cgi?id=1157

           Summary: GTK critical error fixup on specific laptops
           Product: Xfce Panel Plugins
           Version: unspecified
          Platform: PC
        OS/Version: Linux
            Status: NEW
          Severity: normal
          Priority: Medium
         Component: battery
        AssignedTo: xfce-goodies-dev at berlios.de
        ReportedBy: matje at lanzone.be


On my Dell Latitude D600, I get this critical error when I'm on AC:

Gtk-CRITICAL **: gtk_progress_set_percentage: assertion `percentage >= 0 &&
percentage <= 1.0' failed 

This is because my laptop reports the battery percentage to be 110% when on AC.
Attached is a proposed patch to fix this up.

Reproducible: Always
Steps to Reproduce:
1. Add battery applet on an AC powered Dell D600


Actual Results:  
GTK critical error

Expected Results:  
Don't give errors ;)

-- 
Configure bugmail: http://bugzilla.xfce.org/userprefs.cgi?tab=email
------- You are receiving this mail because: -------
You are the assignee for the bug, or are watching the assignee.


From bugzilla-daemon at xfce.org  Mon Sep 19 00:15:55 2005
From: bugzilla-daemon at xfce.org (bugzilla-daemon at xfce.org)
Date: Sun, 18 Sep 2005 22:15:55 +0000 (UTC)
Subject: [Bug 1157] GTK critical error fixup on specific laptops 
Message-ID: <20050918221555.375C61F7049@espresso.foo-projects.org>

Do NOT reply to this email.  To make further comments on this bug, use
the URL below:
http://bugzilla.xfce.org/show_bug.cgi?id=1157





------- Additional Comments From matje at lanzone.be  2005-09-18 22:15 UTC -------
Created an attachment (id=315)
 --> (http://bugzilla.xfce.org/attachment.cgi?id=315&action=view)
Patch to fix problem.

Made it for 0.2.0, but works against 0.3.0 too (didn't notice the newer version
before I made changes)

-- 
Configure bugmail: http://bugzilla.xfce.org/userprefs.cgi?tab=email
------- You are receiving this mail because: -------
You are the assignee for the bug, or are watching the assignee.


From mihalyi at matfyz.cz  Sat Sep 17 12:16:32 2005
From: mihalyi at matfyz.cz (Ondrej =?ISO-8859-15?Q?Mih=E1lyi?=)
Date: Sat, 17 Sep 2005 12:16:32 +0200
Subject: 'hacking' some of XFCE goodies
In-Reply-To: <432A99A9.6070901@szift.org>
References: <4325CDC0.3060208@szift.org>
	<4327ECE5.6070807@szift.org>
	<432A99A9.6070901@szift.org>
Message-ID: <20050917121632.00001c85@ACER_ONDRA>

Didn't try your app, but I think that it would help, if instead of system() you would use combination of fork(), exec() and waitpid().  Idea is to use fork and exec to spawn the 'top' process and then periodically use non-blocking version of waitpid (there are some flags to make it non-blocking) to check whether the 'top' process finished.

I know that you may well not be familiar with those functions, but if you want to succeed in making your app better, I believe that this is kind of easy way how to do it.

Cheers, 

Ondrej

On Fri, 16 Sep 2005 12:08:41 +0200
_ukasz Hejnak <szift at szift.org> wrote:

> Hi again :]
> Ok, just to finish the cpugraph-szifted panel-crashing issue
> As I saw 'some' interest in my modification of cpugraph,
> I decided to finally learn some more on C and finish the crashing
> As reading trough I found out about the system() function ;]
> So now I use that instead of the funny 'script' system
> And as system() waits for the runned process to finish up, it won't give 
> the cpugraph any more reasons to crash also..
> 
> The only issue now, is that as it waits for the system() to finish up, 
> the whole panel freezes for a nano-second (when top works)..
> I think only a alternate system of getting the data would solve this one
> but I don't have time to go into this right now, maybe in the future.
> 
> So all it depends on now is a /tmp dir writable to the user, and the 
> /usr/bin/top program installed.
> The updated version is already available at the standard location:
> http://szift.org/xfce/xfce4-cpugraph-plugin-szifted.tar.bz2
> 
> Have fun :]
> Should there anything other wrong happen, please let me know.
> 
> -- 
> Best wishes
> _ukasz Hejnak
> 
> _______________________________________________
> xfce-goodies-dev mailing list
> xfce-goodies-dev at lists.berlios.de
> http://lists.berlios.de/mailman/listinfo/xfce-goodies-dev


From mihalyi at matfyz.cz  Sun Sep 18 11:16:52 2005
From: mihalyi at matfyz.cz (Ondrej =?ISO-8859-15?Q?Mih=E1lyi?=)
Date: Sun, 18 Sep 2005 11:16:52 +0200
Subject: 'hacking' some of XFCE goodies
In-Reply-To: <432C4E4E.3010803@szift.org>
References: <4325CDC0.3060208@szift.org>
	<4327ECE5.6070807@szift.org>
	<432A99A9.6070901@szift.org>
	<20050917161708.00005edf@ACER_ONDRA>
	<432C4E4E.3010803@szift.org>
Message-ID: <20050918111652.00002de2@ACER_ONDRA>

When you say you fork and then call system(), it was not what I meant.  More direct way is to call a variation of a function exec to run the top program (execl, execv, ... try 'man 3 exec' into console).  The advantage is that you spawn only the forked process, which upon calling something like execlp("top", "top", "options", "moreoptions", NULL) will replace your code in the forked child by the code of 'top' and execute it with given parameters.  (don't forget, that first parameter in unixes starts with the path to file name of the executable, therefore I wrote "top" twice in the argument list of function execlp)

BUT remember, 'top' doesn't have an option to save output to a file, so you have to redirect it's output to a file.
After fork(), but before exec(), you must open a file by function open() (similar to fopen, but returns integer - file descriptor instead of FILE*), call close(1) (close standard output), call dup2(filedesc, 1), close(filedesc).

Code snippet:
fork();
int fd = open("filename", O_CREAT|O_WRONLY|O_TRUNC);
close(1);
dup2(fd, 1);
close(fd);
execlp("top", "top", "options", "moreoptions", NULL);

Then you don't have to kill the new process, just in your main program call the function waitpid(pid_of_forked_process, &status, flags) to get rid of the defunct process (zombie) - you always have to call some variation of wait() function after calling fork to get rid of the zombie process.

If you set flags in waitpid to WNOHANG, waitpid becomes non blocking and you can periodically check if your spawned process finished and only then reread the top.lista file.

Even better way is to use system pipes in your program to directly read the output of top (not through file), but it's more complicated.  

I really hope I didn't cofuse you :) Ask me if you want more info.  Maybe you should read somewhere about linux system programming, it would sure help.

Cheers,

Ondrej

On Sat, 17 Sep 2005 19:11:42 +0200
> I had a problem with the number of "xfce4-panel <defunct>" growing to 
> milions but I set a kill()er for them and now I think it works without 
> any problems..
> The trace can be found in /tmp dir - where are the top.pid top.old and 
> top.lista files.
> 
> The forked child does a system() call to `top` to retrieve info on 
> running processes and channels it to top.lista.
> The top.pid contains the forked child's pid, to trace the status of it,
> when it's over a kill() signal is sent to get rid of the zombie.
> Then the program retrieves data from top.lista, stores the parsed 
> version in top.old and forks a new process.
> While the process is running again, the top.old is used for data source 
> and so on...
> 
> The updated (and I hope final) version is already available at the 
> standard location:
> http://szift.org/xfce/xfce4-cpugraph-plugin-szifted.tar.bz2
> 
> Have a nice run :)
> 
> --
> Best wishes
> _ukasz Hejnak
> _______________________________________________
> xfce-goodies-dev mailing list
> xfce-goodies-dev at lists.berlios.de
> http://lists.berlios.de/mailman/listinfo/xfce-goodies-dev


From dbobadil at gmail.com  Mon Sep 19 12:22:50 2005
From: dbobadil at gmail.com (Daniel Bobadilla)
Date: Mon, 19 Sep 2005 06:22:50 -0400
Subject: Screenshot plugin
In-Reply-To: <27722314.1127030838948.JavaMail.ngmail@webmail-06.arcor-online.net>
References: <Pine.LNX.4.61.0509072230520.2948@zeno2.math.washington.edu>
	 <Pine.LNX.4.61.0509172114570.16657@zeno3.math.washington.edu>
	 <27722314.1127030838948.JavaMail.ngmail@webmail-06.arcor-online.net>
Message-ID: <50080c0805091903223605f3d1@mail.gmail.com>

Yes, This is my little-plugin, I'll make a release en berlios.de, in
the svn repositories.
Now you can find a mirror in 
http://chileforge.cl/projects/screenshooter/ .
The source and cvs coming soon.

Daniel.


From maxxer at hotmail.it  Wed Sep 21 12:15:17 2005
From: maxxer at hotmail.it (maxxer)
Date: Wed, 21 Sep 2005 12:15:17 +0200
Subject: Strange acpi thing with battery 
Message-ID: <20050921101517.GA15472@ginger>

Hi

I'm having a little problem with XFCE battery monitor and my acpi.
I've searched around on google and so but I couldn't find someone
experiencing the same problem of mine. When I select the battery monitor
for inclusion in the xfce bar in acpi_listen I get signals 80 and 81
caught at least every second, and in the meantime in acpid logfile 

-
[Tue Sep 20 21:45:01 2005] received event "processor CPU1 00000080
00000000"
[Tue Sep 20 21:45:01 2005] notifying client 8141[1000:100]
[Tue Sep 20 21:45:01 2005] executing action "/etc/acpi/default.sh
processor CPU1 00000080 000000
00"
[Tue Sep 20 21:45:01 2005] BEGIN HANDLER MESSAGES
[Tue Sep 20 21:45:02 2005] END HANDLER MESSAGES
[Tue Sep 20 21:45:02 2005] action exited with status 0
[Tue Sep 20 21:45:02 2005] completed event "processor CPU1 00000080
00000000"
[Tue Sep 20 21:45:02 2005] received event "processor CPU1 00000081
00000000"
[Tue Sep 20 21:45:02 2005] notifying client 8141[1000:100]
[Tue Sep 20 21:45:02 2005] executing action "/etc/acpi/default.sh
processor CPU1 00000081 000000
00"
[Tue Sep 20 21:45:02 2005] BEGIN HANDLER MESSAGES
[Tue Sep 20 21:45:02 2005] END HANDLER MESSAGES
[Tue Sep 20 21:45:02 2005] action exited with status 0
[Tue Sep 20 21:45:02 2005] completed event "processor CPU1 00000081
00000000"

-

I thought it was a X problem, or an acpi problem, but I noticed it only
happens when I have the battery monitor in the bar.
I didn't manage to understand the meaning of that two messages, so I'm
asking here if this behaviour is normal, and in case how can I avoid it
since it's flooding my logs.
My pc is an Asus a2k laptop, running 2.6.13.1 custom kernel (but it's
going this way since at least 2.6.10).

I hope someone can give me a hint.
Many thanks
Maxxer



From jasper at xfce.org  Tue Sep 27 12:08:14 2005
From: jasper at xfce.org (Jasper Huijsmans)
Date: Tue, 27 Sep 2005 12:08:14 +0200
Subject: Xfce Goodies Project enhancements
Message-ID: <43391A0E.1060509@xfce.org>

Hi all,

I'd like to start a discussion about the goodies project, to see if 
there are things that could be improved.

Specifically I'd like to hear your opinion on the following items:

- Move SVN to Xfce server(s). Auke is doing a great job managing our 
server and more and more subprojects are being hosted there as well 
(XFC, thunar, xfmedia, pyxfce,...).

- Management and coordination. Currently there basically is none. I 
thought it might be good if a few goodies developers would become some 
sort of release team and make coordinated releases of all plugins, check 
every once in a while if maintainers are becoming inactive, approve the 
addition of new developers, etc.

- Website. I thought for a project like this with many independent 
subprojects it might be better to use some sort of wiki. That would make 
it easier, I think, for maintainers to keep the information about their 
program up-to-date. Every plugin could have a small project page with: 
name, author(s), contact information, screenshot(s), link to download 
latest version, etc.
Maybe it would be nice to have a small team of developers to keep the 
general content of the website up-to-date.

- Communication. Could this be improved? For instance, I think it is not 
always clear to users that xfce-goodies is a vital part of Xfce to get 
the full Xfce Experience (TM). Also, I'm not sure it is clear enough for 
potential developers that the project is open to everyone.

- Anything else about the project you would like to see different?


Soon, I'll be switching SVN trunk to the new panel framework I have been 
developing. All plugins will have to be ported (should not be too hard 
to do), so this might also be a good opportunity to beta-test other 
changes in the project.

It is your project, so tell me what you think.

cheers,
	Jasper



From masse_nicolas at yahoo.fr  Tue Sep 27 13:32:10 2005
From: masse_nicolas at yahoo.fr (Nicolas Masse)
Date: Tue, 27 Sep 2005 13:32:10 +0200
Subject: Xfce Goodies Project enhancements
In-Reply-To: <43391A0E.1060509@xfce.org>
References: <43391A0E.1060509@xfce.org>
Message-ID: <20050927133210.0ce8c09c.masse_nicolas@yahoo.fr>

On Tue, 27 Sep 2005 12:08:14 +0200
Jasper Huijsmans <jasper at xfce.org> wrote:

> Hi all,
> 
> I'd like to start a discussion about the goodies project, to see if 
> there are things that could be improved.
> 
> Specifically I'd like to hear your opinion on the following items:
> 
> - Move SVN to Xfce server(s). Auke is doing a great job managing our 
> server and more and more subprojects are being hosted there as well 
> (XFC, thunar, xfmedia, pyxfce,...).
> 
No prob for me, since we are already using svn.

> - Management and coordination. Currently there basically is none. I 
> thought it might be good if a few goodies developers would become some 
> sort of release team and make coordinated releases of all plugins, check 
> every once in a while if maintainers are becoming inactive, approve the 
> addition of new developers, etc.
> 
> - Website. I thought for a project like this with many independent 
> subprojects it might be better to use some sort of wiki. That would make 
> it easier, I think, for maintainers to keep the information about their 
> program up-to-date. Every plugin could have a small project page with: 
> name, author(s), contact information, screenshot(s), link to download 
> latest version, etc.
> Maybe it would be nice to have a small team of developers to keep the 
> general content of the website up-to-date.
> 
This remeber me the idea of creating directory.xfce.org, a site with all xfce-related stuff. But this never comes really alive yet.
I also think that the organisation can be improved, and something like news for every plugin who added/updated would be a good starting point I think.
Also using a wiki for that is perhaps a good idea, or perhaps not if for example we want a news system written by 2 or 3 people. 
At least, this could (must?) be discussed. 

> - Communication. Could this be improved? For instance, I think it is not 
> always clear to users that xfce-goodies is a vital part of Xfce to get 
> the full Xfce Experience (TM). Also, I'm not sure it is clear enough for 
> potential developers that the project is open to everyone.
> 
Perhaps adding a link called "how to contribute" and an how-to for that can do the trick.

> - Anything else about the project you would like to see different?
> 
Hmm, perhaps having some guys who can test the plugin before releasing them to ensure quality can be good too (wa spoke of that for directory.xfce.org). But we can also live without.

> 
> Soon, I'll be switching SVN trunk to the new panel framework I have been 
> developing. All plugins will have to be ported (should not be too hard 
> to do), so this might also be a good opportunity to beta-test other 
> changes in the project.
> 
Mine just don't work, but that's another problem :-).

> It is your project, so tell me what you think.
> 
> cheers,
> 	Jasper
> 

Bountykiller.
> _______________________________________________
> xfce-goodies-dev mailing list
> xfce-goodies-dev at lists.berlios.de
> http://lists.berlios.de/mailman/listinfo/xfce-goodies-dev


From jasper at xfce.org  Tue Sep 27 22:16:51 2005
From: jasper at xfce.org (Jasper Huijsmans)
Date: Tue, 27 Sep 2005 22:16:51 +0200
Subject: New panel in trunk
Message-ID: <4339A8B3.4040709@xfce.org>

Hi all,

I have just switched SVN trunk to the new panel framework. This is a big 
change, so expect some b0rkage. You have been warned.

The update will probably fail with a message about plugins and panel 
directories. 'rm -rf panel plugins ; svn up' should do the trick.

Note that most of the panel plugins have not been ported yet, so they 
will not work. Also, unfortunately, the panel settings will not be 
converted to the new panel.

This is still very much development code, so there will probably be 
problems. Please let me know about them, here or on bugzilla.

	Jasper


From jasper at xfce.org  Wed Sep 28 08:24:11 2005
From: jasper at xfce.org (Jasper Huijsmans)
Date: Wed, 28 Sep 2005 08:24:11 +0200
Subject: Porting panel plugins for 4.4
Message-ID: <433A370B.3080604@xfce.org>

Hi all,

The new panel framework for 4.4 is now in SVN trunk. All plugins will 
have to be ported, but this should not be too difficult.

To get started, read the README.Plugins from the panel toplevel source
dir and have a look at the API docs on 
http://xfce.loculus.nl/documentation/API/ .

The mailwatch plugin has been ported (still in
xfce4-mailwatch-plugin/branches/experimental) and the new panel contains
a testplugin that could be used as an example.

I'd like to start working on the ports as soon as possible. I can do the
porting myself, or help you out.

Things I plan to do during the porting:
- Copy current code to a branch (xfce_4_2)
- Port trunk to new API (obviously ;)
- Use xfce4-dev-tools and remove generated files
- Bump the version number.

Here is a list of all plugins, as far as I know (tell me if I missed
any). Please, if you're the maintainer of a plugin, reply to this mail
and tell me if you want to do the porting yourself, or you'd like me to
handle it.

1  xfce4-battery-plugin -- actually, I have already done the porting
			   for this one.
2  xfce4-clipman-plugin
3  xfce4-cpugraph-plugin
4  xfce4-datetime-plugin
5  xfce4-diskperf-plugin
6  xfce4-fsguard-plugin
7  xfce4-genmon-plugin
8  xfce4-i8k-plugin
9  xfce4-megahertz-plugin
10 xfce4-minicmd-plugin
11 xfce4-mixer
12 xfce4-modemlights-plugin
13 xfce4-netload-plugin
14 xfce4-notes-plugin
15 xfce4-quicklauncher-plugin
16 xfce4-screenshooter-plugin
17 xfce4-sensors-plugin
18 xfce4-showdesktop-plugin
19 xfce4-systemload-plugin
20 xfce4-taskbar-plugin
21 xfce4-trigger-launcher
22 xfce4-wavelan-plugin
23 xfce4-weather-plugin
24 xfce4-websearch-plugin
25 xfce4-windowlist-plugin
26 xfce4-xkb-plugin
27 xfce4-xmms-plugin

Wow, 27, that's not bad at all ;-)

cheers,
	Jasper



From asm3072 at njit.edu  Wed Sep 28 12:12:11 2005
From: asm3072 at njit.edu (Antonio SJ Musumeci)
Date: Wed, 28 Sep 2005 06:12:11 -0400
Subject: Porting panel plugins for 4.4
In-Reply-To: <433A370B.3080604@xfce.org>
References: <433A370B.3080604@xfce.org>
Message-ID: <433A6C7B.9060009@njit.edu>

I've been meaning to install trunk for a while now and improve the 
plugin some... as i'm being laid off today I should have plenty of time 
to invest in doing so now. ;-)

I'll take care of the i8k-plugin.

-antonio

Jasper Huijsmans wrote:
> Hi all,
> 
> The new panel framework for 4.4 is now in SVN trunk. All plugins will 
> have to be ported, but this should not be too difficult.
> 
> To get started, read the README.Plugins from the panel toplevel source
> dir and have a look at the API docs on 
> http://xfce.loculus.nl/documentation/API/ .
> 
> The mailwatch plugin has been ported (still in
> xfce4-mailwatch-plugin/branches/experimental) and the new panel contains
> a testplugin that could be used as an example.
> 
> I'd like to start working on the ports as soon as possible. I can do the
> porting myself, or help you out.
> 
> Things I plan to do during the porting:
> - Copy current code to a branch (xfce_4_2)
> - Port trunk to new API (obviously ;)
> - Use xfce4-dev-tools and remove generated files
> - Bump the version number.
> 
> Here is a list of all plugins, as far as I know (tell me if I missed
> any). Please, if you're the maintainer of a plugin, reply to this mail
> and tell me if you want to do the porting yourself, or you'd like me to
> handle it.
> 
> 1  xfce4-battery-plugin -- actually, I have already done the porting
>                for this one.
> 2  xfce4-clipman-plugin
> 3  xfce4-cpugraph-plugin
> 4  xfce4-datetime-plugin
> 5  xfce4-diskperf-plugin
> 6  xfce4-fsguard-plugin
> 7  xfce4-genmon-plugin
> 8  xfce4-i8k-plugin
> 9  xfce4-megahertz-plugin
> 10 xfce4-minicmd-plugin
> 11 xfce4-mixer
> 12 xfce4-modemlights-plugin
> 13 xfce4-netload-plugin
> 14 xfce4-notes-plugin
> 15 xfce4-quicklauncher-plugin
> 16 xfce4-screenshooter-plugin
> 17 xfce4-sensors-plugin
> 18 xfce4-showdesktop-plugin
> 19 xfce4-systemload-plugin
> 20 xfce4-taskbar-plugin
> 21 xfce4-trigger-launcher
> 22 xfce4-wavelan-plugin
> 23 xfce4-weather-plugin
> 24 xfce4-websearch-plugin
> 25 xfce4-windowlist-plugin
> 26 xfce4-xkb-plugin
> 27 xfce4-xmms-plugin
> 
> Wow, 27, that's not bad at all ;-)
> 
> cheers,
>     Jasper
> 
> _______________________________________________
> xfce-goodies-dev mailing list
> xfce-goodies-dev at lists.berlios.de
> http://lists.berlios.de/mailman/listinfo/xfce-goodies-dev
> 


From xotazu at cvc.uab.es  Wed Sep 28 12:43:13 2005
From: xotazu at cvc.uab.es (Xavier Otazu)
Date: Wed, 28 Sep 2005 12:43:13 +0200
Subject: Xfce Goodies Project enhancements
In-Reply-To: <20050928100008.909.75334.Mailman@bat.berlios.de>
References: <20050928100008.909.75334.Mailman@bat.berlios.de>
Message-ID: <20050928124313.7e356b87@cvc131.uab.es>

	Hi:

> 
> - Management and coordination. Currently there basically is none. I 
> thought it might be good if a few goodies developers would become
> some sort of release team and make coordinated releases of all
> plugins, check every once in a while if maintainers are becoming
> inactive, approve the addition of new developers, etc.

	Sounds good. 

	There is a question I think it is important for the reputation
of xfce. If some goodies are to be coordinately released, I think that
they should be goodies stable enough. That is, we should avoid
include those projects with some bugs or in an unstable state. If some
projects are coordinately released, they should be "the best" ones (it
sounds really weird) and they should go into the goodies package that
users can download.

	I know it sounds weird, because it implies to decide what
project is good and what project is "not so good" ... but it is a kind
of quality control that improves xfce quality and reputation.

	The truth is that I am not completely sure about that, but I
send you my thoughts ...

> about their program up-to-date. Every plugin could have a small
> project page with: name, author(s), contact information,
> screenshot(s), link to download latest version, etc.

	I completely agree!

> Maybe it would be nice to have a small team of developers to keep the 
> general content of the website up-to-date.

	Of course.

> 
> - Communication. Could this be improved? For instance, I think it is
> not always clear to users that xfce-goodies is a vital part of Xfce
> to get the full Xfce Experience (TM). Also, I'm not sure it is clear
> enough for potential developers that the project is open to everyone.

	Related to the first part, I think it has to be promoted from
the xfce site. That is, it is important to drive users from xfce to
xfce-goodies.

	Related to the second part, I think it is obvious. It is open
source, hence it is open to everybody ...

> 
> - Anything else about the project you would like to see different?
> 

	Related to the previous question. I think goodies web site is a
bit isolated from the xfce site. For example, berlios projects show a
different GUI, hence users think they are in a completely different
site, not "officially" related to the XFCE site. I think it would be
good to use similar GUI's, or even use the same host.

	It is important to stress that berlios goodies are the
"official" goodies for Xfce. Another possibility would be to insert
links to goodies project in xfce help pages, documentation, etc...

cheers

Xavier


From hjmuller at webmail.co.za  Wed Sep 28 15:08:03 2005
From: hjmuller at webmail.co.za (Hennie Muller)
Date: Wed, 28 Sep 2005 15:08:03 +0200
Subject: Plugin compilation
Message-ID: <web-7052777@cgp7.sentechsa.net>

Hi all,

I've got a small problem. I'm new to linux, new to C
programming, and now I've decided to write a plugin for
xfce.
When trying to compile the sample plugin I get the
following error:

/usr/lib/gcc-lib/i586-suse-linux/3.3.5/../../../crt1.o(.text+0x18):
In function `_start':
../sysdeps/i386/elf/start.S:115: undefined reference to
`main'
/tmp/ccwgsehR.o(.text+0x56): In function
`xfce_control_class_init':
sample.c: undefined reference to `control_class_set_unique'
/tmp/ccwgsehR.o(.text+0x60):sample.c: undefined reference
to `control_class_set_unloadable'
/tmp/ccwgsehR.o(.text+0x8b):sample.c: undefined reference
to `control_class_set_icon'
/tmp/ccwgsehR.o(.text+0xc): In function
`g_module_check_init':
sample.c: undefined reference to
`xfce_plugin_check_version'
collect2: ld returned 1 exit status

I use the following command to compile:
gcc -Wall -O2 `pkg-config xfce4-panel-1.0 --libs --cflags`
sample.c -o sample

Can someone please point me in the right direction?
_____________________________________________________________________
For super low premiums, click here http://www.dialdirect.co.za/quote

http://www.webmail.co.za the South African FREE email service


From nickschermer at gmail.com  Wed Sep 28 15:16:55 2005
From: nickschermer at gmail.com (Nick Schermer)
Date: Wed, 28 Sep 2005 15:16:55 +0200
Subject: Plugin compilation
In-Reply-To: <web-7052777@cgp7.sentechsa.net>
References: <web-7052777@cgp7.sentechsa.net>
Message-ID: <4abe35490509280616544fce70@mail.gmail.com>

Is this for the new panel?
Look if you plugin is internal or external and @
http://xfce.loculus.nl/documentation/API/

Gr. Nick

Greets, Nick

2005/9/28, Hennie Muller <hjmuller at webmail.co.za>:
>
> Hi all,
>
> I've got a small problem. I'm new to linux, new to C
> programming, and now I've decided to write a plugin for
> xfce.
> When trying to compile the sample plugin I get the
> following error:
>
> /usr/lib/gcc-lib/i586-suse-linux/3.3.5/../../../crt1.o(.text+0x18):
> In function `_start':
> ../sysdeps/i386/elf/start.S:115: undefined reference to
> `main'
> /tmp/ccwgsehR.o(.text+0x56): In function
> `xfce_control_class_init':
> sample.c: undefined reference to `control_class_set_unique'
> /tmp/ccwgsehR.o(.text+0x60):sample.c: undefined reference
> to `control_class_set_unloadable'
> /tmp/ccwgsehR.o(.text+0x8b):sample.c: undefined reference
> to `control_class_set_icon'
> /tmp/ccwgsehR.o(.text+0xc): In function
> `g_module_check_init':
> sample.c: undefined reference to
> `xfce_plugin_check_version'
> collect2: ld returned 1 exit status
>
> I use the following command to compile:
> gcc -Wall -O2 `pkg-config xfce4-panel-1.0 --libs --cflags`
> sample.c -o sample
>
> Can someone please point me in the right direction?
> _____________________________________________________________________
> For super low premiums, click here http://www.dialdirect.co.za/quote
>
> http://www.webmail.co.za the South African FREE email service
> _______________________________________________
> xfce-goodies-dev mailing list
> xfce-goodies-dev at lists.berlios.de
> http://lists.berlios.de/mailman/listinfo/xfce-goodies-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/xfce-goodies-dev/attachments/20050928/8614eb69/attachment.html>

From jasper at xfce.org  Wed Sep 28 15:25:06 2005
From: jasper at xfce.org (Jasper Huijsmans)
Date: Wed, 28 Sep 2005 15:25:06 +0200
Subject: Plugin compilation
In-Reply-To: <web-7052777@cgp7.sentechsa.net>
References: <web-7052777@cgp7.sentechsa.net>
Message-ID: <433A99B2.8050007@xfce.org>

Hi Hennie,

Hennie Muller schreef:
> Hi all,
> 
> I've got a small problem. I'm new to linux, new to C
> programming, and now I've decided to write a plugin for
> xfce.
> When trying to compile the sample plugin I get the
> following error:
> 
[...]
> `xfce_plugin_check_version'
> collect2: ld returned 1 exit status
> 
> I use the following command to compile:
> gcc -Wall -O2 `pkg-config xfce4-panel-1.0 --libs --cflags`
> sample.c -o sample
> 
> Can someone please point me in the right direction?

A couple of things:

1. There is a new panel for 4.4 that is very different. You may want to 
write your plugin for that instead. It won't be too difficult to port it 
later, though.

2. I'm not sure which sample plugin you use, but it might not be 
entirely up-to-date. Starting with something simple like the minicmd 
plugin might be easier.

3. What is the output of 'pkg-config xfce4-panel-1.0 --libs --cflags'? 
Make sure you have the required development packages installed.

	Jasper


From bugzilla-daemon at xfce.org  Thu Sep 29 01:03:59 2005
From: bugzilla-daemon at xfce.org (bugzilla-daemon at xfce.org)
Date: Wed, 28 Sep 2005 23:03:59 +0000 (UTC)
Subject: [Bug 1165]  New: Add autosave feature for notes
Message-ID: <20050928230359.BFD641F7056@espresso.foo-projects.org>

Do NOT reply to this email.  To make further comments on this bug, use
the URL below:
http://bugzilla.xfce.org/show_bug.cgi?id=1165

           Summary: Add autosave feature for notes
           Product: Xfce Panel Plugins
           Version: unspecified
          Platform: PC
        OS/Version: Linux
            Status: NEW
          Severity: enhancement
          Priority: Medium
         Component: notes
        AssignedTo: xfce-goodies-dev at berlios.de
        ReportedBy: fghellar at yahoo.de


When I got my system back on after a power outage, I noticed that all the notes
I created since I last logged out, which was about two weeks before, were
missing. So I thought it would be good if the notes could be automatically saved
just after they are created, and not only on logout. Thanks for your attention.

Reproducible: Always
Steps to Reproduce:
1. Create a new note
2. Do not log out
3. Turn off the computer the hard way

Actual Results:  
The new note was missing.

Expected Results:  
Save the new note along with the older ones.

-- 
Configure bugmail: http://bugzilla.xfce.org/userprefs.cgi?tab=email
------- You are receiving this mail because: -------
You are the assignee for the bug, or are watching the assignee.


From jasper at xfce.org  Fri Sep 30 11:41:26 2005
From: jasper at xfce.org (Jasper Huijsmans)
Date: Fri, 30 Sep 2005 11:41:26 +0200
Subject: Porting panel plugins for 4.4
In-Reply-To: <20050929004000.5da47e5f.masse_nicolas@yahoo.fr>
References: <433A370B.3080604@xfce.org> <20050929004000.5da47e5f.masse_nicolas@yahoo.fr>
Message-ID: <433D0846.9030509@xfce.org>

Nicolas Masse schreef:
> I think that something interesting would be to have a complete list of the status of the port of each plugin. For now, here is what we have:
> 

I just ported Netload. I won't commit anything, unless the maintainers 
tell me to. Feel free to ignore my ports. Updated list:

    Plugin                      Status
========================================================================
1  xfce4-battery-plugin        done (by Jasper)
                                http://xfce.loculus.nl/plugins/
2  xfce4-clipman-plugin        done (Nick Schermer)
3  xfce4-cpugraph-plugin
4  xfce4-datetime-plugin       Is this the clock?
                                - No, but I'd like to merge it.
5  xfce4-diskperf-plugin
6  xfce4-fsguard-plugin
7  xfce4-genmon-plugin
8  xfce4-i8k-plugin            Antonio Musumeci
9  xfce4-megahertz-plugin      Wit Wilinski
10 xfce4-minicmd-plugin        done (by Ori Bernstein)
11 xfce4-mixer                 Danny / Ori
12 xfce4-modemlights-plugin    will be done in some weeks
                                (Andreas J. Guelzow)
13 xfce4-netload-plugin        done by Jasper:
                                http://xfce.loculus.nl/plugins/
14 xfce4-notes-plugin
15 xfce4-quicklauncher-plugin  done by Nicolas (experimental branche)
16 xfce4-screenshooter-plugin
17 xfce4-sensors-plugin        will be done in some weeks (Fabian Nowak)
18 xfce4-showdesktop-plugin
19 xfce4-systemload-plugin
20 xfce4-taskbar-plugin        not needed
21 xfce4-trigger-launcher
22 xfce4-wavelan-plugin
23 xfce4-weather-plugin
24 xfce4-websearch-plugin
25 xfce4-windowlist-plugin     not needed
26 xfce4-xkb-plugin
27 xfce4-xmms-plugin
28 xfce4-mount-plugin          will be done in some weeks (Fabian Nowak)
29 xfce4-mailwatch-plugin      done


From timystery at arcor.de  Fri Sep 30 14:10:49 2005
From: timystery at arcor.de (Fabian Nowak)
Date: Fri, 30 Sep 2005 14:10:49 +0200
Subject: Porting panel plugins for 4.4
In-Reply-To: <433D0846.9030509@xfce.org>
References: <433A370B.3080604@xfce.org>
	 <20050929004000.5da47e5f.masse_nicolas@yahoo.fr>
	 <433D0846.9030509@xfce.org>
Message-ID: <1128082249.1634.5.camel@TIM3000>

in the xfce4-panel/README.Plugins, there is standing
XDT_CHECK_PACKAGE ([LIBXFCE4PANEL], [libxfce4panel-1.0], [4.4.0])

instead it should better be 
XDT_CHECK_PACKAGE([LIBXFCE4PANEL], [libxfce4panel-1.0], [4.3.20])





From jasper at xfce.org  Fri Sep 30 14:14:03 2005
From: jasper at xfce.org (Jasper Huijsmans)
Date: Fri, 30 Sep 2005 14:14:03 +0200
Subject: Porting panel plugins for 4.4
In-Reply-To: <1128082249.1634.5.camel@TIM3000>
References: <433A370B.3080604@xfce.org>	 <20050929004000.5da47e5f.masse_nicolas@yahoo.fr>	 <433D0846.9030509@xfce.org> <1128082249.1634.5.camel@TIM3000>
Message-ID: <433D2C0B.8080708@xfce.org>

Fabian Nowak schreef:
> in the xfce4-panel/README.Plugins, there is standing
> XDT_CHECK_PACKAGE ([LIBXFCE4PANEL], [libxfce4panel-1.0], [4.4.0])
> 
> instead it should better be 
> XDT_CHECK_PACKAGE([LIBXFCE4PANEL], [libxfce4panel-1.0], [4.3.20])
> 

Fixed. Thanks.


From bernhard.walle at gmx.de  Fri Sep 30 19:08:41 2005
From: bernhard.walle at gmx.de (Bernhard Walle)
Date: Fri, 30 Sep 2005 19:08:41 +0200
Subject: Porting panel plugins for 4.4
In-Reply-To: <433D0846.9030509@xfce.org>
References: <433A370B.3080604@xfce.org>	<20050929004000.5da47e5f.masse_nicolas@yahoo.fr> <433D0846.9030509@xfce.org>
Message-ID: <p18013-c48.ln1@news.bwalle.de>

* Jasper Huijsmans [30.09.2005 11:41]:
> Nicolas Masse schreef:
>> I think that something interesting would be to have a complete list of the status of the port of each plugin. For now, here is what we have:
>>
> 
> I just ported Netload. I won't commit anything, unless the maintainers 
> tell me to. Feel free to ignore my ports. Updated list:

Of course, you can commit.
The problem is that I don't have time in the moment to install a current
SVN version. I'll switch to 4.4 is late beta-versions appear.


Regards,
Bernhard



